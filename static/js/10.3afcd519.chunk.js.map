{"version":3,"sources":["workspace/common/FormsyTextField.js","hooks/useQuery.js","hooks/usePagination.tsx","hooks/useHover.ts","redux/hooks.ts","workspace/common/NoRecords.js","workspace/course/CourseNavigation.tsx","workspace/course/CourseDetails.tsx","workspace/course/CourseAudience.tsx","workspace/course/CoursePricing.tsx","workspace/course/CourseSection.tsx","workspace/course/SectionEditor.tsx","workspace/course/CourseChapter.tsx","util/index.ts","workspace/course/ChapterEditor.tsx","workspace/course/CourseCurriculum.tsx","workspace/course/CouponEditor.tsx","workspace/course/CoursePromotions.tsx","workspace/course/QuestionOption.tsx","workspace/course/QuestionEditor.tsx","workspace/course/QuizEditor.tsx","workspace/course/ExerciseEditor.tsx","workspace/course/LessonEditor.tsx","workspace/course/ContentEditor.tsx","workspace/course/CourseEditor.tsx"],"names":["withFormsy","props","errorMessage","value","onChange","event","setValue","currentTarget","error","Boolean","helperText","useQuery","location","useLocation","params","URLSearchParams","search","result","entries","key","usePagination","query","history","useHistory","useState","parseInt","page","setPage","limit","rowsPerPage","setRowsPerPage","console","log","generateURL","useCallback","page0","params0","append","toString","push","pathname","useEffect","undefined","startDate","Date","Number","endDate","useHover","hover","setHover","onMouseEnter","onMouseLeave","useAppSelector","useSelector","useStyles","makeStyles","theme","container","display","alignItems","justifyContent","flexDirection","image","width","height","message","fontSize","fontWeight","color","palette","text","secondary","action","marginTop","NoRecords","classes","actionText","actionHandler","className","src","alt","variant","size","onClick","root","backgroundColor","background","paper","borderRadius","shape","marginRight","spacing","groups","group","listItemIcon","minWidth","listItemText","id","children","title","icon","url","CourseNavigation","useTheme","renderItem","item","selected","ListItem","button","replace","startsWith","window","open","ListItemIcon","Icon","ListItemText","primary","style","main","map","index","List","component","length","Divider","identifiers","Object","keys","by639_1","levels","card","content","padding","form","subtitle","description","level","languageCode","actions","paddingLeft","paddingRight","actionIcon","progress","CourseDetails","updating","onUpdate","setTitle","setDescription","setLevel","setLanguageCode","valid","setValid","changesMade","handleTitleChange","target","handleDescriptionChange","handleLevelChange","handleLanguageCodeChange","handleValidForm","handleInvalidForm","handleSubmit","courseId","Card","CardContent","onValid","onInvalid","name","label","validations","maxLength","validationErrors","required","multiline","rows","FormControl","InputLabel","Select","labelId","MenuItem","identifier","language","CardActions","Button","disabled","CircularProgress","question","answer","marginBottom","CourseAudience","objectives","setObjectives","requirements","setRequirements","targets","setTargets","resources","setResources","handleObjectivesChange","handleRequirementsChange","handleTargetsChange","handleResourcesChange","handleSave","Typography","currencyCodesList","currencyCodes","data","sort","a","b","currency","localeCompare","code","currencies","actualPrice","discount","discountedPrice","CoursePricing","actualPrice0","discountedPrice0","setActualPrice","setDiscount","setDiscountedPrice","setCurrency","handleActualPriceChange","newActualPrice","parseFloat","newDiscountedPrice","handleDiscountChange","newDiscount","handleDiscountedPriceChange","handleCurrencyChange","newCurrency","currencyCode","isNumeric","chapter","userSelect","chapterHeader","chapterNumberIcon","chapterNumber","chapterTitle","header","sectionNumberIcon","sectionNumber","sectionTypeIcon","sectionTitle","marginLeft","dragIndicator","iconByType","video","article","quiz","coding_excercise","assignment","CourseSection","chapterId","sectionId","type","onDelete","onEdit","confirm","useConfirm","handleDelete","confirmationText","confirmationButtonProps","then","handleAddContent","draggableId","provided","snapshot","elevation","ref","innerRef","draggableProps","dragHandleProps","opacity","isDragging","visibility","IconButton","types","top","toolbar","toolbarContent","maxWidth","SectionEditor","onCancel","onSave","creating","setType","handleTypeChange","minLength","fullWidth","level2","sections","secondaryActions","newSection","paddingTop","paddingBottom","alignSelf","newSectionIcon","newSectionTitle","details","CourseChapter","onReorderSections","onEditChapter","onDeleteChapter","onSaveSection","onDeleteSection","openNewSection","setOpenNewSection","previousCreating","useRef","current","handleDragEnd","destination","newSections","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","handleEditChapter","handleDeleteChapter","handleNewSection","handleCancelNewSection","handleSaveNewSection","section","onDragEnd","droppableId","droppableProps","placeholder","ButtonBase","minHeight","bottom","ChapterEditor","onClose","previousUpdating","Drawer","anchor","AppBar","position","Toolbar","noRecords","newChapter","newChapterIcon","newChapterTitle","CourseCurriculum","chapters","onUpdateChapter","onCreateChapter","onCreateSection","openChapterEditor","setOpenChapterEditor","currentChapter","setCurrentChapter","firstName","state","session","payload","handleNewChapter","handleCloseChapterEditor","handleSaveChapter","handleReorderSections","newCurrentChapter","find","handleSaveSection","parentChapterId","handleDeleteSection","process","level1","duration","maxRedemptions","durations","setName","setCode","setDuration","active","setActive","setMaxRedemptions","handleNameChange","handleCodeChange","handleDurationChange","handleMaxRedemptionsChange","isInt","openCouponEditor","setOpenCouponEditor","handleCloseCouponEditor","handleSaveCoupon","handleNewCoupon","CouponEditor","option","left","right","optionCheckbox","optionText","QuestionOption","correct","onNew","onTextChange","onCorrectChange","handleNew","handleTextChange","handleCorrectChange","checked","Checked","Radio","Checkbox","options","EMPTY_OPTION","QuestionEditor","onTypeChange","onDuplicate","onOptionsChange","newOptions","lodash","cloneDeep","handleNewQuestion","handleDuplicateQuestion","handleDeleteQuestion","handleOptionTextChange","optionIndex","newOption","handleOptionCorrectChange","oldOptionIndex","findIndex","oldOption","handleNewOption","slice","handleDeleteOption","minRows","disableSpacing","newQuestion","newQuestionIcon","newQuestionTitle","EMPTY_QUESTION","QuizEditor","questions","setQuestions","handleQuestionTextChange","newQuestions","handleQuestionTypeChange","handleQuestionOptionsChange","duplicateQuestion","handleAddQuestion","isEqual","justifyExercise","exercise","exerciseOption","exerciseTexts","exerciseOptionHandle","exerciseOptionTitle","exerciseTitle","exerciseDescription","testListItem","exerciseTag","GET_TEST_SUITES","gql","LessonEditor","setExercise","setSearch","exerciseOptionsOpen","setExerciseOptionsOpen","useLazyQuery","fetchTestSuites","fetching","loading","previousData","getTestSuites","handleSearchChange","variables","handleExerciseChange","_event","newExercise","exerciseFilterOptions","createFilterOptions","matchFrom","ignoreAccents","ignoreCase","stringify","handle","handleExerciseOptionsToggle","renderOption","renderInput","InputProps","endAdornment","getOptionsSelected","getOptionLabel","Autocomplete","filterOptions","onOpen","records","getOptionSelected","renderExerciseSelect","tests","test","tags","tag","Chip","renderTestSuite","contentTextArea","resize","setContent","handleContentChange","inputProps","secondaryRoot","textAlign","GET_SECTION","UPDATE_SECTION","ContentEditor","useParams","currentSectionData","useMutation","refetchQueries","updateSection","currentSection","getSectionById","handleSaveLesson","handleSaveExercise","handleSaveQuiz","ExerciseEditor","suspense","default","toolbarActions","toolbarTitle","link","cursor","navigation","flexGrow","GET_COURSE","CREATE_EMPTY_COURSE","UPDATE_COURSE_DETAILS","PUBLISH_COURSE","DELETE_COURSE","UNPUBLISH_COURSE","CREATE_CHAPTER","UPDATE_CHAPTER","DELETE_CHAPTER","CREATE_SECTION","DELETE_SECTION","CourseEditor","getCourse","currentCourseData","createEmptyCourse","newCourse","updateCourse","publishCourse","unpublishCourse","deleteCourse","createChapter","updateChapter","deleteChapter","createSection","deleteSection","currentCourse","useMemo","getCourseById","createCourse","handleOpenCourses","handleOpenCourse","handlePublishCourse","status","handleDeleteCourse","handleUpdateCourse","updates","handleCreateChapter","handleUpdateChapter","handleCreateSection","Breadcrumbs","separator","Link","exact","path","CoursePromotions","to"],"mappings":"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","file":"static/js/10.3afcd519.chunk.js","sourcesContent":["import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport { withFormsy } from \"formsy-react\";\n\nfunction FormsyTextField(props) {\n    const { errorMessage } = props;\n    const value = props.value || \"\";\n\n    const changeValue = (event) => {\n        props.setValue(event.currentTarget.value);\n        if (props.onChange) {\n            props.onChange(event);\n        }\n    };\n\n    return (\n        <TextField\n            {...props}\n            onChange={changeValue}\n            value={value}\n            error={Boolean(errorMessage)}\n            helperText={errorMessage}\n        />\n    );\n}\n\nexport default withFormsy(FormsyTextField);\n","import { useLocation } from \"react-router-dom\";\n\nconst useQuery = () => {\n    const location = useLocation();\n    const params = new URLSearchParams(location.search);\n    const result = {};\n    for (const [key, value] of params.entries()) {\n        result[key] = value;\n    }\n    return result;\n};\n\nexport default useQuery;\n","import { useState, useCallback, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport useQuery from \"./useQuery\";\n\nconst DEFAULT_ROWS_PER_PAGE = 20;\n\nexport interface PaginationQuery {\n    page: string;\n    limit: string;\n    startDate: string | Date;\n    endDate: string | Date;\n}\n\nexport interface Pagination {\n    generateURL: (page: number, limit: number) => void;\n    query: PaginationQuery;\n    page: number;\n    setPage: (page: number) => void;\n    rowsPerPage: number;\n    setRowsPerPage: (rowsPerPage: number) => void;\n}\n\nconst usePagination = (): Pagination => {\n    const query = useQuery() as PaginationQuery;\n    const history = useHistory();\n    const location = useLocation();\n    const [page, setPage] = useState(parseInt(query.page, 10) || 0);\n    const [rowsPerPage, setRowsPerPage] = useState(\n        parseInt(query.limit, 10) || DEFAULT_ROWS_PER_PAGE,\n    );\n    console.log(location);\n\n    const generateURL = useCallback(\n        (page0: number, limit: number): void => {\n            const params0 = new URLSearchParams(location.search);\n\n            params0.append(\"page\", page0.toString());\n            params0.append(\"limit\", limit.toString());\n\n            history.push(`${location.pathname}?${params0.toString()}`);\n        },\n        [history, location.pathname, location.search],\n    );\n\n    useEffect(() => {\n        if (query.page === undefined || query.limit === undefined) {\n            generateURL(page, rowsPerPage);\n        }\n    }, [generateURL, page, query.page, query.limit, rowsPerPage]);\n\n    if (\"startDate\" in query) {\n        query.startDate = new Date(Number(query.startDate));\n    }\n\n    if (\"endDate\" in query) {\n        query.endDate = new Date(Number(query.endDate));\n    }\n\n    return { generateURL, query, page, setPage, rowsPerPage, setRowsPerPage };\n};\n\nexport default usePagination;\n","import { useState, useCallback } from \"react\";\n\ninterface HoverState {\n    hover: boolean;\n    onMouseEnter: () => void;\n    onMouseLeave: () => void;\n}\n\nconst useHover = (): HoverState => {\n    const [hover, setHover] = useState(false);\n\n    const onMouseEnter = useCallback(() => {\n        setHover(true);\n    }, []);\n\n    const onMouseLeave = useCallback(() => {\n        setHover(false);\n    }, []);\n\n    return { hover, onMouseEnter, onMouseLeave };\n};\n\nexport default useHover;","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\n\nimport type { AppDispatch } from './store';\nimport type { RootState } from \"../types\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n  },\n  image: {\n    width: \"auto\",\n    height: 400,\n  },\n  message: {\n    fontSize: 20,\n    fontWeight: 400,\n    color: theme.palette.text.secondary,\n  },\n  action: {\n    marginTop: 24,\n  },\n}));\n\nexport default function NoRecords(props) {\n  const classes = useStyles();\n  const { message, actionText, actionHandler, action, image } = props;\n\n  return (\n    <div className={classes.container}>\n      <img className={classes.image} src={image} alt=\"\" />\n      <Typography className={classes.message}>{message}</Typography>\n      {action && (\n        <Button\n          className={classes.action}\n          variant=\"contained\"\n          size=\"large\"\n          color=\"secondary\"\n          onClick={actionHandler}\n        >\n          {actionText}\n        </Button>\n      )}\n    </div>\n  );\n}\n","import { Fragment, FunctionComponent, useCallback } from \"react\";\nimport {\n    Button,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Divider,\n    Icon,\n} from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { useLocation, useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n        backgroundColor: (theme.palette.background as any).paper,\n        height: 312,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        alignItems: \"flex-end\",\n        borderRadius: theme.shape.borderRadius,\n        marginRight: theme.spacing(2),\n    },\n    groups: {\n        width: \"100%\",\n    },\n    group: {},\n    listItemIcon: {\n        minWidth: 40,\n    },\n    listItemText: {\n        color: \"white\",\n        fontSize: 16,\n    },\n}));\n\ninterface GroupItem {\n    id: string;\n    title: string;\n    icon: string;\n    url: string;\n}\n\ninterface Group {\n    id: string;\n    children: GroupItem[];\n}\n\nconst groups: Group[] = [\n    {\n        id: \"general\",\n        children: [\n            {\n                id: \"details\",\n                title: \"Details\",\n                icon: \"lightbulb\",\n                url: \"/courses/:id/details\",\n            },\n            {\n                id: \"audience\",\n                title: \"Audience\",\n                icon: \"person\",\n                url: \"/courses/:id/audience\",\n            },\n            {\n                id: \"pricing\",\n                title: \"Pricing\",\n                icon: \"monetization_on\",\n                url: \"/courses/:id/pricing\",\n            },\n            {\n                id: \"curriculum\",\n                title: \"Curriculum\",\n                icon: \"checklist\",\n                url: \"/courses/:id/curriculum\",\n            },\n            {\n                id: \"promotions\",\n                title: \"Promotions\",\n                icon: \"emoji_events\",\n                url: \"/courses/:id/promotions\",\n            },\n        ],\n    },\n];\n\nexport interface Props {\n    id: string;\n}\n\nconst CourseNavigation: FunctionComponent<Props> = (props: Props) => {\n    const { id } = props;\n    const classes = useStyles();\n    const location = useLocation();\n    const history = useHistory();\n    const theme = useTheme();\n\n    const handleClick = (id: string, url: string) => () => {\n        // trackSideNavigationClick(id);\n\n        if (url.startsWith(\"/\")) {\n            history.push(url);\n        } else {\n            window.open(url);\n        }\n    };\n\n    const renderItem = (item: GroupItem) => {\n        const selected = location.pathname === item.url;\n        return (\n            <ListItem\n                key={item.id}\n                button={true}\n                onClick={handleClick(item.id, item.url.replace(\":id\", id))}>\n                <ListItemIcon classes={{ root: classes.listItemIcon }}>\n                    <Icon\n                        fontSize=\"small\"\n                        color={selected ? \"secondary\" : undefined}>\n                        {item.icon}\n                    </Icon>\n                </ListItemIcon>\n                <ListItemText\n                    primary={item.title}\n                    classes={{ primary: classes.listItemText }}\n                    style={{\n                        color: selected\n                            ? theme.palette.secondary.main\n                            : undefined,\n                    }}\n                />\n            </ListItem>\n        );\n    };\n\n    const renderGroup = (group: Group, index: number) => (\n        <Fragment key={group.id}>\n            <List component=\"nav\" className={classes.group}>\n                {group.children.map(renderItem)}\n            </List>\n            {index + 1 < groups.length && <Divider />}\n        </Fragment>\n    );\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.groups}>{groups.map(renderGroup)}</div>\n        </div>\n    );\n};\n\nexport default CourseNavigation;\n","import { FunctionComponent, useState, useCallback, useEffect } from \"react\";\nimport {\n    Card,\n    CardContent,\n    CardActions,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    Icon,\n    Button,\n    CircularProgress,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Formsy from \"formsy-react\";\nimport { by639_1 } from \"iso-language-codes\";\n\nimport TextField from \"../common/FormsyTextField\";\n\nconst identifiers: string[] = Object.keys(by639_1);\n\nconst levels = [\n    {\n        title: \"Beginner\",\n        value: \"beginner\",\n    },\n    {\n        title: \"Intermediate\",\n        value: \"intermediate\",\n    },\n    {\n        title: \"Expert\",\n        value: \"expert\",\n    },\n    {\n        title: \"All Levels\",\n        value: \"all_levels\",\n    },\n];\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        width: 700,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    title: {},\n    subtitle: {\n        marginTop: theme.spacing(3),\n    },\n    description: {\n        marginTop: theme.spacing(3),\n    },\n    level: {\n        marginTop: theme.spacing(3),\n    },\n    languageCode: {\n        marginTop: theme.spacing(3),\n    },\n    actions: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-end\",\n        width: \"100%\",\n        padding: theme.spacing(2),\n    },\n    action: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n        width: 128,\n    },\n    actionIcon: {\n        marginRight: theme.spacing(1),\n    },\n    progress: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\ninterface Props {\n    id: string;\n    title: string;\n    description: string;\n    level: string;\n    languageCode: string;\n    updating: boolean;\n    onUpdate: (course: any) => void;\n}\n\nconst CourseDetails: FunctionComponent<Props> = (props: Props) => {\n    const { updating, onUpdate } = props;\n    const classes = useStyles();\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [level, setLevel] = useState(\"beginner\");\n    const [languageCode, setLanguageCode] = useState(\"en\");\n    const [valid, setValid] = useState(false);\n\n    const changesMade =\n        props.title !== title ||\n        props.description !== description ||\n        props.level !== level ||\n        props.languageCode !== languageCode;\n\n    /* Propogate changes in props to our local state. */\n    useEffect(() => {\n        setTitle(props.title);\n        setDescription(props.description);\n        setLevel(props.level);\n        setLanguageCode(props.languageCode);\n    }, [props.description, props.languageCode, props.level, props.title]);\n\n    const handleTitleChange = useCallback((event) => {\n        setTitle(event.target.value);\n    }, []);\n\n    const handleDescriptionChange = useCallback((event) => {\n        setDescription(event.target.value);\n    }, []);\n    const handleLevelChange = useCallback((event) => {\n        setLevel(event.target.value);\n    }, []);\n\n    const handleLanguageCodeChange = useCallback((event) => {\n        setLanguageCode(event.target.value);\n    }, []);\n\n    const handleValidForm = useCallback(() => {\n        setValid(true);\n    }, []);\n\n    const handleInvalidForm = useCallback(() => {\n        setValid(false);\n    }, []);\n\n    const handleSubmit = useCallback(() => {\n        onUpdate({\n            courseId: props.id,\n            title,\n            description,\n            level,\n            languageCode,\n        });\n    }, [description, languageCode, level, onUpdate, props.id, title]);\n\n    return (\n        <Card className={classes.card}>\n            <CardContent className={classes.content}>\n                <Formsy\n                    className={classes.form}\n                    onValid={handleValidForm}\n                    onInvalid={handleInvalidForm}>\n                    <TextField\n                        name=\"title\"\n                        className={classes.title}\n                        label=\"Title\"\n                        validations={{\n                            maxLength: 504,\n                        }}\n                        validationErrors={{\n                            maxLength:\n                                \"The title should not be longer than 504 characters\",\n                        }}\n                        variant=\"outlined\"\n                        size=\"medium\"\n                        value={title}\n                        onChange={handleTitleChange}\n                        required={true}\n                    />\n                    <TextField\n                        name=\"description\"\n                        className={classes.description}\n                        label=\"Description\"\n                        validations={{\n                            maxLength: 1020,\n                        }}\n                        validationErrors={{\n                            maxLength:\n                                \"The description should not be longer than 1024 characters\",\n                        }}\n                        variant=\"outlined\"\n                        size=\"medium\"\n                        multiline={true}\n                        rows={10}\n                        value={description}\n                        onChange={handleDescriptionChange}\n                    />\n                    <FormControl\n                        variant=\"outlined\"\n                        className={classes.level}\n                        size=\"medium\">\n                        <InputLabel id=\"levelLabel\">Level</InputLabel>\n                        <Select\n                            labelId=\"levelLabel\"\n                            value={level}\n                            onChange={handleLevelChange}\n                            label=\"Level\">\n                            {levels.map((level) => (\n                                <MenuItem key={level.title} value={level.value}>\n                                    {level.title}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                    <FormControl\n                        variant=\"outlined\"\n                        className={classes.languageCode}\n                        size=\"medium\">\n                        <InputLabel id=\"languageCodeLabel\">Language</InputLabel>\n                        <Select\n                            labelId=\"languageCodeLabel\"\n                            value={languageCode}\n                            onChange={handleLanguageCodeChange}\n                            label=\"Language\">\n                            {identifiers.map((identifier: string) => {\n                                const language: {\n                                    name: string;\n                                } = by639_1[identifier];\n                                return (\n                                    <MenuItem\n                                        key={identifier}\n                                        value={identifier}>\n                                        {language.name}\n                                    </MenuItem>\n                                );\n                            })}\n                        </Select>\n                    </FormControl>\n                </Formsy>\n            </CardContent>\n            <CardActions className={classes.actions}>\n                <Button\n                    className={classes.action}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={!changesMade || !valid || updating}\n                    onClick={handleSubmit}>\n                    {!updating && (\n                        <Icon className={classes.actionIcon} fontSize=\"small\">\n                            save\n                        </Icon>\n                    )}\n                    {updating && (\n                        <CircularProgress\n                            size=\"16px\"\n                            color=\"inherit\"\n                            className={classes.progress}\n                        />\n                    )}\n                    Save\n                </Button>\n            </CardActions>\n        </Card>\n    );\n};\n\nexport default CourseDetails;\n","import { FunctionComponent, useState, useCallback, useEffect } from \"react\";\nimport {\n    Card,\n    CardContent,\n    CardActions,\n    Icon,\n    Button,\n    CircularProgress,\n    Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Formsy from \"formsy-react\";\n\nimport TextField from \"../common/FormsyTextField\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        width: 700,\n        padding: theme.spacing(1),\n    },\n    content: {},\n    question: {\n    },\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    answer: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(4),\n    },\n    actions: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-end\",\n        width: \"100%\",\n    },\n    action: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n        width: 160,\n    },\n    actionIcon: {\n        marginRight: theme.spacing(1),\n    },\n    progress: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\ninterface Props {\n    id: string;\n    objectives: string;\n    requirements: string;\n    targets: string;\n    resources: string;\n    updating: boolean;\n    onUpdate: (update: any) => void;\n}\n\nconst CourseAudience: FunctionComponent<Props> = (props: Props) => {\n    const { id: courseId, updating, onUpdate } = props;\n    const classes = useStyles();\n    const [objectives, setObjectives] = useState(\"\");\n    const [requirements, setRequirements] = useState(\"\");\n    const [targets, setTargets] = useState(\"\");\n    const [resources, setResources] = useState(\"\");\n    const [valid, setValid] = useState(false);\n\n    useEffect(() => {\n        setObjectives(props.objectives);\n        setRequirements(props.requirements);\n        setTargets(props.targets);\n        setResources(props.resources);\n    }, [props.objectives, props.requirements, props.resources, props.targets]);\n\n    const handleObjectivesChange = useCallback((event) => {\n        setObjectives(event.target.value);\n    }, []);\n\n    const handleRequirementsChange = useCallback((event) => {\n        setRequirements(event.target.value);\n    }, []);\n\n    const handleTargetsChange = useCallback((event) => {\n        setTargets(event.target.value);\n    }, []);\n\n    const handleResourcesChange = useCallback((event) => {\n        setResources(event.target.value);\n    }, []);\n\n    const handleValidForm = useCallback(() => {\n        setValid(true);\n    }, []);\n\n    const handleInvalidForm = useCallback(() => {\n        setValid(false);\n    }, []);\n\n    const handleSave = useCallback(\n        () => {\n            onUpdate({\n                courseId,\n                requirements,\n                objectives,\n                targets,\n                resources\n            });\n        },\n        [courseId, objectives, onUpdate, requirements, resources, targets],\n    );\n\n    return (\n        <Card className={classes.card}>\n            <CardContent className={classes.content}>\n                <Formsy\n                    className={classes.form}\n                    onValid={handleValidForm}\n                    onInvalid={handleInvalidForm}>\n                    <Typography className={classes.question}>\n                        What will students learn in your course?\n                    </Typography>\n                    <TextField\n                        name=\"objectives\"\n                        className={classes.answer}\n                        validations={{\n                            maxLength: 2048,\n                        }}\n                        validationErrors={{\n                            maxLength:\n                                \"The objective should not be longer than 2048 characters\",\n                        }}\n                        variant=\"outlined\"\n                        size=\"medium\"\n                        value={objectives}\n                        onChange={handleObjectivesChange}\n                        multiline={true}\n                        rows={5}\n                    />\n\n                    <Typography className={classes.question}>\n                        Are there any course requirements or prerequisites?\n                    </Typography>\n                    <TextField\n                        name=\"requirements\"\n                        className={classes.answer}\n                        validations={{\n                            maxLength: 2048,\n                        }}\n                        validationErrors={{\n                            maxLength:\n                                \"The requirements should not be longer than 2048 characters\",\n                        }}\n                        variant=\"outlined\"\n                        size=\"medium\"\n                        value={requirements}\n                        onChange={handleRequirementsChange}\n                        multiline={true}\n                        rows={5}\n                    />\n\n                    <Typography className={classes.question}>\n                        Who are your target students?\n                    </Typography>\n                    <TextField\n                        name=\"objective\"\n                        className={classes.answer}\n                        validations={{\n                            maxLength: 2048,\n                        }}\n                        validationErrors={{\n                            maxLength:\n                                \"The targets should not be longer than 2048 characters\",\n                        }}\n                        variant=\"outlined\"\n                        size=\"medium\"\n                        value={targets}\n                        onChange={handleTargetsChange}\n                        multiline={true}\n                        rows={5}\n                    />\n\n                    <Typography className={classes.question}>\n                        What resources will students have access to?\n                    </Typography>\n                    <TextField\n                        name=\"objective\"\n                        className={classes.answer}\n                        validations={{\n                            maxLength: 2048,\n                        }}\n                        validationErrors={{\n                            maxLength:\n                                \"The resources should not be longer than 2048 characters\",\n                        }}\n                        variant=\"outlined\"\n                        size=\"medium\"\n                        value={resources}\n                        onChange={handleResourcesChange}\n                        multiline={true}\n                        rows={5}\n                    />\n                </Formsy>\n            </CardContent>\n            <CardActions className={classes.actions}>\n                <Button\n                    className={classes.action}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={objectives === \"\" || !valid || updating}\n                    onClick={handleSave}>\n                    {!updating && (\n                        <>\n                            <Icon\n                                className={classes.actionIcon}\n                                fontSize=\"small\">\n                                save\n                            </Icon>\n                            Save\n                        </>\n                    )}\n                    {updating && (\n                        <>\n                            <CircularProgress\n                                size=\"16px\"\n                                color=\"inherit\"\n                                className={classes.progress}\n                            />\n                            Saving...\n                        </>\n                    )}\n                </Button>\n            </CardActions>\n        </Card>\n    );\n};\n\nexport default CourseAudience;\n","import { FunctionComponent, useState, useCallback, useEffect } from \"react\";\nimport {\n    Card,\n    CardContent,\n    CardActions,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    Icon,\n    Button,\n    CircularProgress,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Formsy from \"formsy-react\";\nimport currencyCodes from \"currency-codes\";\n\nimport TextField from \"../common/FormsyTextField\";\nimport { Course } from \"../../types\";\n\nconst currencyCodesList = [...currencyCodes.data]\n    .sort((a, b) => a.currency.localeCompare(b.currency))\n    .map((item) => item.code);\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        width: 700,\n    },\n    content: {\n        padding: theme.spacing(2),\n    },\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    currencies: {},\n    actualPrice: {\n        marginTop: theme.spacing(3),\n    },\n    discount: {\n        marginTop: theme.spacing(3),\n    },\n    discountedPrice: {\n        marginTop: theme.spacing(3),\n    },\n    currency: {\n        marginTop: theme.spacing(3),\n    },\n    actions: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-end\",\n        width: \"100%\",\n        padding: theme.spacing(2),\n    },\n    action: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n        width: 128,\n    },\n    actionIcon: {\n        marginRight: theme.spacing(1),\n    },\n    progress: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\ninterface Params {\n    id: string;\n}\n\ninterface Props {\n    id: string;\n    actualPrice: number;\n    discountedPrice: number;\n    onUpdate: (course: any) => void;\n    updating: boolean;\n}\n\n// TODO: The currency is currently not saved in the database.\nconst CoursePricing: FunctionComponent<Props> = (props: Props) => {\n    const {\n        id: courseId,\n        actualPrice: actualPrice0,\n        discountedPrice: discountedPrice0,\n        onUpdate,\n        updating,\n    } = props;\n    const classes = useStyles();\n    const [actualPrice, setActualPrice] = useState(0);\n    const [discount, setDiscount] = useState(0);\n    const [discountedPrice, setDiscountedPrice] = useState(0);\n    const [currency, setCurrency] = useState(\"INR\");\n    const [valid, setValid] = useState(false);\n\n    const changesMade =\n        props.actualPrice !== actualPrice ||\n        props.discountedPrice !== discountedPrice;\n    /*props.currency !== currency*/\n\n    /* Propogate changes in props to our local state. */\n    useEffect(() => {\n        setActualPrice(actualPrice0 || 0);\n        setDiscountedPrice(discountedPrice0 || 9);\n        setDiscount(\n            ((actualPrice0 - discountedPrice0) / actualPrice0) * 100 || 0,\n        );\n    }, [actualPrice0, discountedPrice0, props.actualPrice, props.discountedPrice]);\n\n    const handleActualPriceChange = useCallback(\n        (event) => {\n            const newActualPrice = parseFloat(event.target.value) || 0;\n            const newDiscountedPrice =\n                newActualPrice - (newActualPrice * discount) / 100;\n            setActualPrice(newActualPrice);\n            setDiscountedPrice(newDiscountedPrice);\n        },\n        [discount],\n    );\n\n    const handleDiscountChange = useCallback(\n        (event) => {\n            const newDiscount = parseFloat(event.target.value) || 0;\n            const discountAmount = (newDiscount / 100) * actualPrice;\n            const newDiscountedPrice = actualPrice - discountAmount;\n            setDiscount(newDiscount);\n            setDiscountedPrice(newDiscountedPrice);\n        },\n        [actualPrice],\n    );\n\n    const handleDiscountedPriceChange = useCallback(\n        (event) => {\n            const newDiscountedPrice = parseFloat(event.target.value) || 0;\n            const newDiscount =\n                ((actualPrice - newDiscountedPrice) / actualPrice) * 100;\n            setDiscount(newDiscount);\n            setDiscountedPrice(newDiscountedPrice);\n        },\n        [actualPrice],\n    );\n\n    const handleCurrencyChange = useCallback((event, newCurrency) => {\n        setCurrency(newCurrency);\n    }, []);\n\n    const handleValidForm = useCallback(() => {\n        setValid(true);\n    }, []);\n\n    const handleInvalidForm = useCallback(() => {\n        setValid(false);\n    }, []);\n\n    const handleSubmit = useCallback(() => {\n        onUpdate({\n            courseId,\n            actualPrice,\n            discountedPrice,\n        });\n    }, [actualPrice, courseId, discountedPrice, onUpdate]);\n\n    return (\n        <Card className={classes.card}>\n            <CardContent className={classes.content}>\n                <Formsy\n                    className={classes.form}\n                    onValid={handleValidForm}\n                    onInvalid={handleInvalidForm}>\n                    <FormControl\n                        variant=\"outlined\"\n                        className={classes.currencies}\n                        size=\"medium\"\n                        required={true}>\n                        <InputLabel id=\"currencyLabel\">Currency</InputLabel>\n                        <Select\n                            labelId=\"currencyLabel\"\n                            value={currency}\n                            onChange={handleCurrencyChange}\n                            label=\"Currency\">\n                            {currencyCodesList.map((currencyCode, index) => {\n                                const currency =\n                                    currencyCodes.code(currencyCode);\n                                return (\n                                    <MenuItem\n                                        key={currency?.code ?? index}\n                                        value={currency?.code ?? index}>\n                                        {currency?.currency} ({currency?.code})\n                                    </MenuItem>\n                                );\n                            })}\n                        </Select>\n                    </FormControl>\n                    <TextField\n                        name=\"actualPrice\"\n                        className={classes.actualPrice}\n                        label=\"Actual Price\"\n                        validations={{\n                            isNumeric: true,\n                        }}\n                        validationErrors={{\n                            isNumeric: \"Enter a valid price\",\n                        }}\n                        variant=\"outlined\"\n                        size=\"medium\"\n                        value={actualPrice}\n                        onChange={handleActualPriceChange}\n                        required={true}\n                    />\n                    <TextField\n                        name=\"discount\"\n                        className={classes.discount}\n                        label=\"Discount\"\n                        validations={{\n                            isNumeric: true,\n                        }}\n                        validationErrors={{\n                            isNumeric: \"Enter a valid discount\",\n                        }}\n                        variant=\"outlined\"\n                        size=\"medium\"\n                        value={discount}\n                        onChange={handleDiscountChange}\n                    />\n                    <TextField\n                        name=\"discountedPrice\"\n                        className={classes.discountedPrice}\n                        label=\"Discounted Price\"\n                        validations={{\n                            isNumeric: true,\n                        }}\n                        validationErrors={{\n                            isNumeric: \"Enter a valid price\",\n                        }}\n                        variant=\"outlined\"\n                        size=\"medium\"\n                        value={discountedPrice}\n                        onChange={handleDiscountedPriceChange}\n                    />\n                </Formsy>\n            </CardContent>\n            <CardActions className={classes.actions}>\n                <Button\n                    className={classes.action}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={!changesMade || !valid || updating}\n                    onClick={handleSubmit}>\n                    {!updating && (\n                        <Icon className={classes.actionIcon} fontSize=\"small\">\n                            save\n                        </Icon>\n                    )}\n                    {updating && (\n                        <CircularProgress\n                            size=\"16px\"\n                            color=\"inherit\"\n                            className={classes.progress}\n                        />\n                    )}\n                    Save\n                </Button>\n            </CardActions>\n        </Card>\n    );\n};\n\nexport default CoursePricing;\n","import { FunctionComponent, useState, useCallback } from \"react\";\nimport {\n    Card,\n    CardContent,\n    Typography,\n    Icon,\n    IconButton,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { useConfirm } from \"material-ui-confirm\";\n\nimport { SectionType } from \"../../types\";\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        padding: theme.spacing(3),\n    },\n    chapter: {\n        background: theme.palette.background.paper,\n        userSelect: \"none\",\n        marginTop: theme.spacing(2),\n    },\n    chapterHeader: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n    },\n    chapterNumberIcon: {\n        color: \"white\",\n        marginRight: theme.spacing(1),\n    },\n    chapterNumber: { color: \"white\", marginRight: theme.spacing(2) },\n    chapterTitle: { color: \"white\" },\n    header: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n    },\n    sectionNumberIcon: {\n        marginRight: theme.spacing(1),\n    },\n    sectionNumber: {\n        fontSize: 14,\n        width: 88,\n    },\n    sectionTypeIcon: {\n        marginRight: theme.spacing(1),\n    },\n    sectionTitle: {\n        fontSize: 14,\n        fontWeight: 500,\n    },\n    actions: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-end\",\n        alignItems: \"center\",\n        marginLeft: \"auto\",\n    },\n    dragIndicator: {\n        width: 20,\n        height: 20,\n    },\n}));\n\nconst iconByType = {\n    video: \"smart_display\",\n    article: \"article\",\n    quiz: \"live_help\",\n    coding_excercise: \"code\",\n    assignment: \"assignment_turned_in\",\n};\n\nexport interface Props {\n    chapterId: string;\n    sectionId: string;\n    title: string;\n    index: number;\n    type: SectionType;\n    onDelete: (chapterId: string, sectionId: string) => void;\n    onEdit: (chapterId: string, sectionId: string) => void;\n}\n\nconst CourseSection: FunctionComponent<Props> = (props: Props) => {\n    const { chapterId, sectionId, title, index, type, onDelete, onEdit } =\n        props;\n    const [hover, setHover] = useState(false);\n    const classes = useStyles();\n    const confirm = useConfirm();\n\n    const onMouseEnter = useCallback(() => {\n        setHover(true);\n    }, []);\n\n    const onMouseLeave = useCallback(() => {\n        setHover(false);\n    }, []);\n\n    const handleDelete = useCallback(() => {\n        confirm({\n            title: \"Are you sure you want to delete the section?\",\n            description: `You cannot restore it once you delete. This action will permanently delete \"${title}\", including its content.`,\n\n            confirmationText: \"Yes, I understand. Delete anyway.\",\n            confirmationButtonProps: {\n                color: \"secondary\",\n                variant: \"contained\",\n            },\n        }).then(() => {\n            onDelete(chapterId, sectionId);\n        });\n    }, [confirm, title, onDelete, chapterId, sectionId]);\n\n    const handleAddContent = useCallback(() => {\n        onEdit(chapterId, sectionId);\n    }, [chapterId, onEdit, sectionId]);\n\n    return (\n        <Draggable draggableId={sectionId} index={index}>\n            {(provided, snapshot) => (\n                <Card\n                    elevation={0}\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    className={classes.chapter}\n                    style={{\n                        ...provided.draggableProps.style,\n                        opacity: snapshot.isDragging ? 0.7 : 1,\n                    }}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}>\n                    <CardContent className={classes.content}>\n                        <div className={classes.header}>\n                            <Icon\n                                fontSize=\"small\"\n                                className={classes.sectionNumberIcon}>\n                                check_circle\n                            </Icon>\n                            <Typography className={classes.sectionNumber}>\n                                Section {index + 1}\n                            </Typography>\n                            <Icon\n                                fontSize=\"small\"\n                                className={classes.sectionTypeIcon}>\n                                {iconByType[type]}\n                            </Icon>\n                            <Typography className={classes.sectionTitle}>\n                                {title}\n                            </Typography>\n\n                            <div\n                                className={classes.actions}\n                                style={{\n                                    visibility: hover ? \"visible\" : \"hidden\",\n                                }}>\n                                <IconButton\n                                    size=\"small\"\n                                    onClick={handleAddContent}>\n                                    <Icon fontSize=\"small\">edit</Icon>\n                                </IconButton>\n                                <IconButton size=\"small\" onClick={handleDelete}>\n                                    <Icon fontSize=\"small\">delete</Icon>\n                                </IconButton>\n                                <Icon\n                                    fontSize=\"small\"\n                                    className={classes.dragIndicator}>\n                                    drag_indicator\n                                </Icon>\n                            </div>\n                        </div>\n                    </CardContent>\n                </Card>\n            )}\n        </Draggable>\n    );\n};\n\nexport default CourseSection;\n","import {\n    FunctionComponent,\n    useRef,\n    useEffect,\n    useState,\n    useCallback,\n} from \"react\";\nimport {\n    Drawer,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    Button,\n    Typography,\n    Toolbar,\n    AppBar,\n    CircularProgress,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Formsy from \"formsy-react\";\n\nimport { Section } from \"../../types\";\nimport TextField from \"../common/FormsyTextField\";\n\nconst types = [\n    {\n        title: \"Video\",\n        value: \"video\",\n    },\n    {\n        title: \"Article\",\n        value: \"article\",\n    },\n    {\n        title: \"Quiz\",\n        value: \"quiz\",\n    },\n    {\n        title: \"Coding Excercise\",\n        value: \"coding_excercise\",\n    },\n    {\n        title: \"Assignment\",\n        value: \"assignment\",\n    },\n];\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        marginTop: theme.spacing(4),\n    },\n    top: {},\n    toolbar: {},\n    toolbarContent: {\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n    },\n    actions: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-end\",\n        alignItems: \"center\",\n    },\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    title: {\n        fontWeight: \"bold\",\n        fontSize: 20,\n        maxWidth: 800,\n    },\n    type: {\n        marginTop: theme.spacing(2),\n        width: 320,\n    },\n    description: {\n        marginTop: theme.spacing(2),\n        maxWidth: 800,\n    },\n    action: {\n        width: 96,\n        marginLeft: theme.spacing(1),\n    },\n    actionIcon: {\n        marginRight: theme.spacing(1),\n    },\n    progress: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nexport interface Props {\n    creating: boolean;\n    onCancel: () => void;\n    onSave: (section: Section) => void;\n}\n\nconst SectionEditor: FunctionComponent<Props> = (props: Props) => {\n    const { onCancel, onSave, creating } = props;\n    const classes = useStyles();\n    const [title, setTitle] = useState(\"\");\n    const [type, setType] = useState(\"article\");\n    const [valid, setValid] = useState(false);\n\n    const handleTitleChange = useCallback((event) => {\n        setTitle(event.target.value);\n    }, []);\n\n    const handleTypeChange = useCallback((event) => {\n        setType(event.target.value);\n    }, []);\n\n    const handleValidForm = useCallback(() => {\n        setValid(true);\n    }, []);\n\n    const handleInvalidForm = useCallback(() => {\n        setValid(false);\n    }, []);\n\n    const handleSave = useCallback(() => {\n        onSave({\n            title,\n            type,\n        });\n    }, [onSave, title, type]);\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.top}>\n                <Formsy\n                    className={classes.form}\n                    onValid={handleValidForm}\n                    onInvalid={handleInvalidForm}>\n                    <TextField\n                        name=\"title\"\n                        className={classes.title}\n                        label=\"Title\"\n                        validations={{\n                            minLength: 8,\n                            maxLength: 504,\n                        }}\n                        validationErrors={{\n                            minLength: \"The title should have 8-504 characters\",\n                            maxLength: \"The title should have 8-504 characters\",\n                        }}\n                        variant=\"outlined\"\n                        size=\"medium\"\n                        value={title}\n                        onChange={handleTitleChange}\n                        required={true}\n                        fullWidth={true}\n                    />\n                    <FormControl\n                        variant=\"outlined\"\n                        className={classes.type}\n                        size=\"medium\"\n                        required={true}>\n                        <InputLabel id=\"typeLabel\">Type</InputLabel>\n                        <Select\n                            labelId=\"typeLabel\"\n                            value={type}\n                            onChange={handleTypeChange}\n                            label=\"Type\">\n                            {types.map((type) => (\n                                <MenuItem key={type.value} value={type.value}>\n                                    {type.title}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </Formsy>\n            </div>\n            <div className={classes.actions}>\n                <Button\n                    variant=\"outlined\"\n                    className={classes.action}\n                    onClick={onCancel}>\n                    Cancel\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    className={classes.action}\n                    disabled={!valid || creating}\n                    onClick={handleSave}>\n                    {creating && (\n                        <CircularProgress\n                            size=\"16px\"\n                            color=\"inherit\"\n                            className={classes.progress}\n                        />\n                    )}\n                    Save\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default SectionEditor;\n","import {\n    FunctionComponent,\n    useState,\n    useCallback,\n    useRef,\n    useEffect,\n} from \"react\";\nimport { Typography, Icon, IconButton, ButtonBase } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { DragDropContext, Droppable, DropResult } from \"react-beautiful-dnd\";\nimport { useConfirm } from \"material-ui-confirm\";\n\nimport CourseSection from \"./CourseSection\";\nimport SectionEditor from \"./SectionEditor\";\nimport { Section } from \"../../types\";\nimport { reorder } from \"../../util\";\nimport { useHover } from \"../../hooks\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 736,\n        background: (theme.palette.background as any).level2,\n        padding: theme.spacing(3),\n        marginBottom: theme.spacing(2),\n        borderRadius: theme.shape.borderRadius,\n    },\n    sections: {\n        width: \"100%\",\n        borderRadius: theme.shape.borderRadius,\n    },\n    chapter: {\n        background: theme.palette.background.paper,\n        userSelect: \"none\",\n        padding: theme.spacing(2),\n        marginTop: theme.spacing(2),\n    },\n    chapterHeader: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        marginBottom: theme.spacing(4),\n    },\n    chapterNumberIcon: {\n        color: \"white\",\n        marginRight: theme.spacing(1),\n    },\n    chapterNumber: { color: \"white\", marginRight: theme.spacing(2) },\n    chapterTitle: { color: \"white\" },\n    secondaryActions: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        width: \"100%\",\n    },\n    newSection: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        marginTop: theme.spacing(2),\n        alignSelf: \"center\",\n        borderRadius: theme.shape.borderRadius,\n    },\n    newSectionIcon: {\n        color: \"white\",\n        marginRight: theme.spacing(1),\n        fontSize: 18,\n    },\n    newSectionTitle: { color: \"white\", fontSize: 14 },\n    header: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        width: \"100%\",\n    },\n    details: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n    },\n    actions: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-end\",\n        alignItems: \"center\",\n        marginLeft: \"auto\",\n    },\n    dragIndicator: {\n        width: 20,\n        height: 20,\n        color: \"white\",\n    },\n}));\n\nexport interface Props {\n    id?: string;\n    index: number;\n    title?: string;\n    sections?: Section[];\n\n    onReorderSections: (chapterId: string, sections: Section[]) => void;\n    onEditChapter: (chapterId: string) => void;\n    onDeleteChapter: (chapterId: string) => void;\n\n    onSaveSection: (section: Section, parentChapterId: string) => void;\n    onDeleteSection: (chapterId: string, sectionId: string) => void;\n    onEdit: (chapterId: string, sectionId: string) => void;\n}\n\nconst CourseChapter: FunctionComponent<Props> = (props) => {\n    const {\n        id,\n        index,\n        title,\n        sections,\n\n        onReorderSections,\n        onEditChapter,\n        onDeleteChapter,\n\n        onSaveSection,\n        onDeleteSection,\n        onEdit,\n    } = props;\n    const classes = useStyles();\n    const { hover, onMouseEnter, onMouseLeave } = useHover();\n    const [openNewSection, setOpenNewSection] = useState(false);\n    const confirm = useConfirm();\n\n    // TODO: Update this!\n    const creating = false;\n    const previousCreating = useRef(false);\n\n    useEffect(() => {\n        if (previousCreating.current && !creating) {\n            setOpenNewSection(false);\n        }\n\n        previousCreating.current = creating;\n    }, [creating]);\n\n    const handleDragEnd = useCallback(\n        (result: DropResult) => {\n            if (!result.destination) {\n                return;\n            }\n\n            const newSections = reorder(\n                sections || [],\n                result.source.index,\n                result.destination.index,\n            );\n            console.log(\"before\", sections);\n            console.log(\"after\", newSections);\n            onReorderSections(id, newSections);\n        },\n        [id, onReorderSections, sections],\n    );\n\n    const handleEditChapter = useCallback(() => {\n        onEditChapter(id);\n    }, [id, onEditChapter]);\n\n    const handleDeleteChapter = useCallback(() => {\n        confirm({\n            title: \"Are you sure you want to delete the chapter?\",\n            description: `You cannot restore it once you delete. This action will permanently delete \"${title}\", including its sections.`,\n            confirmationText: \"Yes, I understand. Delete anyway.\",\n            confirmationButtonProps: {\n                color: \"secondary\",\n                variant: \"contained\",\n            },\n        }).then(() => {\n            onDeleteChapter(id);\n        });\n    }, [confirm, id, onDeleteChapter, title]);\n\n    const handleNewSection = useCallback(() => {\n        setOpenNewSection(true);\n    }, [setOpenNewSection]);\n\n    const handleCancelNewSection = useCallback(() => {\n        setOpenNewSection(false);\n    }, [setOpenNewSection]);\n\n    const handleSaveNewSection = useCallback(\n        (section) => {\n            onSaveSection(section, id);\n        },\n        [id, onSaveSection],\n    );\n\n    return (\n        <>\n            <div className={classes.root}>\n                <div\n                    className={classes.chapterHeader}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}>\n                    <div className={classes.header}>\n                        <div className={classes.details}>\n                            <Icon\n                                fontSize=\"small\"\n                                className={classes.chapterNumberIcon}>\n                                bookmark\n                            </Icon>\n                            <Typography className={classes.chapterNumber}>\n                                Chapter {index}\n                            </Typography>\n                            <Icon\n                                fontSize=\"small\"\n                                className={classes.chapterNumberIcon}>\n                                topic\n                            </Icon>\n                            <Typography className={classes.chapterTitle}>\n                                {title}\n                            </Typography>\n                        </div>\n                        <div\n                            className={classes.actions}\n                            style={{\n                                visibility: hover ? \"visible\" : \"hidden\",\n                            }}>\n                            <IconButton\n                                size=\"small\"\n                                onClick={handleEditChapter}>\n                                <Icon fontSize=\"small\">edit</Icon>\n                            </IconButton>\n                            <IconButton\n                                size=\"small\"\n                                onClick={handleDeleteChapter}>\n                                <Icon fontSize=\"small\">delete</Icon>\n                            </IconButton>\n                            <Icon\n                                fontSize=\"small\"\n                                className={classes.dragIndicator}>\n                                drag_indicator\n                            </Icon>\n                        </div>\n                    </div>\n                </div>\n                <DragDropContext onDragEnd={handleDragEnd}>\n                    <Droppable droppableId=\"droppable\">\n                        {(provided, snapshot) => (\n                            <div\n                                {...provided.droppableProps}\n                                ref={provided.innerRef}\n                                className={classes.sections}>\n                                {sections?.map((section, index) => (\n                                    <CourseSection\n                                        key={section.id}\n                                        index={index}\n                                        sectionId={section.id}\n                                        chapterId={id}\n                                        title={section.title}\n                                        type={section.type}\n                                        onDelete={onDeleteSection}\n                                        onEdit={onEdit}\n                                    />\n                                ))}\n                                {provided.placeholder}\n                            </div>\n                        )}\n                    </Droppable>\n                </DragDropContext>\n                {openNewSection && (\n                    <SectionEditor\n                        onCancel={handleCancelNewSection}\n                        onSave={handleSaveNewSection}\n                        creating={openNewSection && creating}\n                    />\n                )}\n                {!openNewSection && (\n                    <div className={classes.secondaryActions}>\n                        <ButtonBase\n                            onClick={handleNewSection}\n                            className={classes.newSection}>\n                            <Icon className={classes.newSectionIcon}>\n                                add_circle\n                            </Icon>\n                            <Typography className={classes.newSectionTitle}>\n                                New Section\n                            </Typography>\n                        </ButtonBase>\n                    </div>\n                )}\n            </div>\n        </>\n    );\n};\n\nexport default CourseChapter;\n","export const arraysEqual = (a: any, b: any): boolean => {\n    if (a === b) return true;\n    if (a == null || b == null) return false;\n    if (a.length !== b.length) return false;\n\n    // If you don't care about the order of the elements inside\n    // the array, you should sort both arrays here.\n    // Please note that calling sort on an array will modify that array.\n    // you might want to clone your array first.\n\n    /* eslint-disable-next-line no-plusplus */\n    for (let i = 0; i < a.length; ++i) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\nexport const reorder = (\n    list: any[],\n    startIndex: number,\n    endIndex: number,\n): any[] => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n","import {\n    FunctionComponent,\n    useState,\n    useCallback,\n    useRef,\n    useEffect,\n} from \"react\";\nimport {\n    Drawer,\n    Button,\n    Typography,\n    CircularProgress,\n    AppBar,\n    Toolbar,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Formsy from \"formsy-react\";\n\nimport TextField from \"../common/FormsyTextField\";\nimport { Chapter } from \"../../types\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 800,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        minHeight: \"100vh\",\n    },\n    toolbar: {\n        backgroundColor: (theme.palette.background as any).level2,\n    },\n    toolbarContent: {\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n    },\n    top: {\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    bottom: {\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-end\",\n        alignItems: \"center\",\n        padding: theme.spacing(2),\n    },\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginTop: theme.spacing(3),\n        padding: theme.spacing(2),\n    },\n    title: {\n        fontWeight: \"bold\",\n        fontSize: 20,\n    },\n    description: {\n        marginTop: theme.spacing(2),\n    },\n    type: {\n        marginTop: theme.spacing(2),\n        width: 320,\n    },\n    action: {\n        width: 96,\n        marginLeft: theme.spacing(1),\n    },\n    progress: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nexport interface Props {\n    id?: string;\n    title?: string;\n    description?: string;\n    open: boolean;\n    onClose: () => void;\n    onSave: (chapter: Chapter) => void;\n}\n\nconst ChapterEditor: FunctionComponent<Props> = (props: Props) => {\n    const { id: chapterId, open, onClose, onSave } = props;\n    const classes = useStyles();\n    const [title, setTitle] = useState(props.title || \"\");\n    const [description, setDescription] = useState(props.description || \"\");\n    const [valid, setValid] = useState(false);\n    const previousCreating = useRef(false);\n    const previousUpdating = useRef(false);\n    // TODO: Update this!\n    const creating = false, updating = false;\n\n    const changesMade =\n        !chapterId ||\n        props.title !== title ||\n        props.description !== description;\n\n    useEffect(() => {\n        setTitle(props.title || \"\");\n        setDescription(props.description || \"\");\n    }, [props.title, props.description]);\n\n    useEffect(() => {\n        if (previousCreating.current && !creating) {\n            onClose();\n        }\n\n        previousCreating.current = creating;\n    }, [creating, onClose]);\n\n    useEffect(() => {\n        if (previousUpdating.current && !updating) {\n            onClose();\n        }\n\n        previousUpdating.current = updating;\n    }, [updating, onClose]);\n\n    const handleTitleChange = useCallback((event) => {\n        setTitle(event.target.value);\n    }, []);\n\n    const handleDescriptionChange = useCallback((event) => {\n        setDescription(event.target.value);\n    }, []);\n\n    const handleValidForm = useCallback(() => {\n        setValid(true);\n    }, []);\n\n    const handleInvalidForm = useCallback(() => {\n        setValid(false);\n    }, []);\n\n    const handleSave = useCallback(() => {\n        onSave({\n            chapterId,\n            title,\n            description,\n        });\n    }, [description, chapterId, onSave, title]);\n\n    return (\n        <Drawer anchor=\"right\" open={open} onClose={onClose}>\n            <div className={classes.root}>\n                <div className={classes.top}>\n                    <AppBar position=\"sticky\">\n                        <Toolbar className={classes.toolbar}>\n                            <div className={classes.toolbarContent}>\n                                <Typography className={classes.title}>\n                                    {chapterId ? \"Edit Chapter\" : \"New Chapter\"}\n                                </Typography>\n                            </div>\n                        </Toolbar>\n                    </AppBar>\n                    <Formsy\n                        className={classes.form}\n                        onValid={handleValidForm}\n                        onInvalid={handleInvalidForm}>\n                        <TextField\n                            name=\"title\"\n                            className={classes.title}\n                            label=\"Title\"\n                            validations={{\n                                minLength: 16,\n                                maxLength: 504,\n                            }}\n                            validationErrors={{\n                                minLength:\n                                    \"The title should have 16-504 characters\",\n                                maxLength:\n                                    \"The title should have 16-504 characters\",\n                            }}\n                            variant=\"outlined\"\n                            size=\"medium\"\n                            value={title}\n                            onChange={handleTitleChange}\n                            required={true}\n                            fullWidth={true}\n                        />\n                        <TextField\n                            name=\"description\"\n                            className={classes.description}\n                            label=\"Description\"\n                            validations={{\n                                maxLength: 1024,\n                            }}\n                            validationErrors={{\n                                maxLength:\n                                    \"The description cannot be longer than 1024 characters\",\n                            }}\n                            variant=\"outlined\"\n                            size=\"medium\"\n                            value={description}\n                            onChange={handleDescriptionChange}\n                            fullWidth={true}\n                            multiline={true}\n                            rows={10}\n                        />\n                    </Formsy>\n                </div>\n                <div className={classes.bottom}>\n                    <Button\n                        variant=\"outlined\"\n                        className={classes.action}\n                        onClick={onClose}>\n                        Cancel\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        className={classes.action}\n                        disabled={\n                            !changesMade || !valid || creating || updating\n                        }\n                        onClick={handleSave}>\n                        {(creating || updating) && (\n                            <CircularProgress\n                                size=\"16px\"\n                                color=\"inherit\"\n                                className={classes.progress}\n                            />\n                        )}\n                        Save\n                    </Button>\n                </div>\n            </div>\n        </Drawer>\n    );\n};\n\nexport default ChapterEditor;\n","import { FunctionComponent, useCallback, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Icon, Typography, ButtonBase } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\nimport CourseChapter from \"./CourseChapter\";\nimport ChapterEditor from \"./ChapterEditor\";\nimport SectionEditor from \"./SectionEditor\";\nimport { Chapter, Section } from \"../../types\";\nimport { useAppSelector } from \"../../redux/hooks\";\n\nimport NoRecords from \"../common/NoRecords\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        background: \"transparent\",\n        width: \"100%\"\n    },\n    noRecords: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n        height: \"calc(100vh - 128px)\",\n        width: \"100%\",\n    },\n    secondaryActions: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        width: 736,\n    },\n    newChapter: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        marginTop: theme.spacing(2),\n        alignSelf: \"center\",\n        borderRadius: theme.shape.borderRadius,\n    },\n    newChapterIcon: {\n        color: \"white\",\n        marginRight: theme.spacing(1),\n        fontSize: 18,\n    },\n    newChapterTitle: { color: \"white\", fontSize: 14 },\n}));\n\ninterface Props {\n    courseId: string;\n    chapters: Chapter[];\n    onUpdateChapter: (chapter: any) => void;\n    onCreateChapter: (chapter: any) => void;\n    onDeleteChapter: (chapterId: string) => void;\n\n    onCreateSection: (section: any) => void;\n    onDeleteSection: (chapterId: string, sectionId: string) => void;\n}\n\nconst CourseCurriculum: FunctionComponent<Props> = (props: Props) => {\n    const {\n        courseId,\n        chapters,\n        onUpdateChapter,\n        onCreateChapter,\n        onDeleteChapter,\n\n        onCreateSection,\n        onDeleteSection,\n    } = props;\n    const classes = useStyles();\n    const [openChapterEditor, setOpenChapterEditor] = useState(false);\n    const [currentChapter, setCurrentChapter] = useState<Chapter | null>(null);\n    const history = useHistory();\n    const { firstName } = useAppSelector((state) => state.session.payload);\n\n    const handleNewChapter = useCallback(() => {\n        setCurrentChapter(null);\n        setOpenChapterEditor(true);\n    }, []);\n\n    const handleCloseChapterEditor = useCallback(() => {\n        setOpenChapterEditor(false);\n    }, []);\n\n    /* onUpdateChapter discards courseId. So it's alright to pass it. */\n    const handleSaveChapter = useCallback(\n        (chapter: Chapter) => {\n            (chapter.chapterId ? onUpdateChapter : onCreateChapter)({\n                ...chapter,\n                courseId,\n            });\n        },\n        [courseId, onCreateChapter, onUpdateChapter],\n    );\n\n    const handleReorderSections = useCallback(\n        (chapterId: string, sections: Section[]) => {\n            onUpdateChapter({\n                chapterId,\n                sections: sections.map((section): string => section.id),\n            });\n        },\n        [onUpdateChapter],\n    );\n\n    const handleEditChapter = useCallback(\n        (chapterId: string) => {\n            const newCurrentChapter =\n                chapters.find((chapter) => chapter.id === chapterId) || null;\n            setCurrentChapter(newCurrentChapter);\n            setOpenChapterEditor(true);\n        },\n        [chapters],\n    );\n\n    const handleDeleteChapter = useCallback((chapterId: string) => {\n        onDeleteChapter(chapterId);\n    }, [onDeleteChapter]);\n\n    /* Callbacks passed to `SectionEditor` */\n    const handleSaveSection = useCallback(\n        (section: Section, parentChapterId) => {\n            onCreateSection({\n                ...section,\n                chapterId: parentChapterId,\n            });\n        },\n        [onCreateSection],\n    );\n\n    const handleDeleteSection = useCallback(\n        (chapterId: string, sectionId: string) => {\n            onDeleteSection(chapterId, sectionId);\n        },\n        [onDeleteSection],\n    );\n\n    const handleAddContent = useCallback(\n        (chapterId: string, sectionId: string) => {\n            const chapter = chapters.find(\n                (chapter) => chapter.id === chapterId,\n            );\n            const section = chapter?.sections.find(\n                (section) => section.id === sectionId,\n            );\n            history.push(\n                `/courses/${courseId}/chapters/${chapter?.id}/sections/${section.id}/edit`,\n            );\n        },\n        [chapters, courseId, history],\n    );\n\n    return (\n        <>\n            <div className={classes.root}>\n                {(chapters.length ?? 0) > 0 && (\n                    <>\n                        {chapters.map((chapter, index) => (\n                            <CourseChapter\n                                key={chapter.id}\n                                id={chapter.id}\n                                index={index + 1}\n                                title={chapter.title}\n                                sections={chapter.sections}\n                                onReorderSections={handleReorderSections}\n                                onEditChapter={handleEditChapter}\n                                onDeleteChapter={handleDeleteChapter}\n                                onSaveSection={handleSaveSection}\n                                onDeleteSection={handleDeleteSection}\n                                onEdit={handleAddContent}\n                            />\n                        ))}\n                        <div className={classes.secondaryActions}>\n                            <ButtonBase\n                                onClick={handleNewChapter}\n                                className={classes.newChapter}>\n                                <Icon className={classes.newChapterIcon}>\n                                    add_circle\n                                </Icon>\n                                <Typography className={classes.newChapterTitle}>\n                                    New Chapter\n                                </Typography>\n                            </ButtonBase>\n                        </div>\n                    </>\n                )}\n                {chapters.length === 0 && (\n                    <div className={classes.noRecords}>\n                        <NoRecords\n                            message={`Are you ready to create your first chapter, ${firstName}?`}\n                            actionText=\"Create New Chapter\"\n                            actionHandler={handleNewChapter}\n                            image={`${process.env.PUBLIC_URL}/assets/images/empty-articles.svg`}\n                            action={true}\n                        />\n                    </div>\n                )}\n            </div>\n\n            <ChapterEditor\n                open={openChapterEditor}\n                onClose={handleCloseChapterEditor}\n                onSave={handleSaveChapter}\n                id={currentChapter?.id}\n                title={currentChapter?.title}\n                description={currentChapter?.description}\n            />\n        </>\n    );\n};\n\nexport default CourseCurriculum;\n","import {\n    FunctionComponent,\n    useRef,\n    useEffect,\n    useState,\n    useCallback,\n} from \"react\";\nimport {\n    Drawer,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    Button,\n    Typography,\n    Toolbar,\n    AppBar,\n    CircularProgress,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Formsy from \"formsy-react\";\n\nimport { CouponDuration, Coupon } from \"../../types\";\nimport { useAppSelector } from \"../../redux/hooks\";\nimport TextField from \"../common/FormsyTextField\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 440,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        minHeight: \"100vh\",\n        backgroundColor: (theme.palette.background as any).level1,\n    },\n    top: {},\n    toolbar: {\n        backgroundColor: (theme.palette.background as any).level2,\n    },\n    toolbarContent: {\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n    },\n    actions: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-end\",\n        alignItems: \"center\",\n        padding: theme.spacing(2),\n    },\n    form: {\n        padding: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    title: {\n        fontWeight: \"bold\",\n        fontSize: 20,\n        maxWidth: 800,\n    },\n    name: {\n        marginTop: theme.spacing(2),\n    },\n    code: {\n        marginTop: theme.spacing(2),\n    },\n    discount: {\n        marginTop: theme.spacing(2),\n    },\n    duration: {\n        marginTop: theme.spacing(2),\n    },\n    maxRedemptions: {\n        marginTop: theme.spacing(2),\n    },\n    action: {\n        width: 96,\n        marginLeft: theme.spacing(1),\n    },\n    actionIcon: {\n        marginRight: theme.spacing(1),\n    },\n    progress: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst durations = [\n    {\n        title: \"Three Months\",\n        value: \"three_months\",\n    },\n    {\n        title: \"Forever\",\n        value: \"forever\",\n    },\n];\n\nexport interface Props {\n    id?: string;\n    name?: string;\n    code?: string;\n    discount?: number;\n    duration?: CouponDuration;\n    active?: boolean;\n    maxRedemptions?: number;\n    open: boolean;\n    onClose: () => void;\n    onSave: (coupon: Coupon) => void;\n}\n\nconst SectionEditor: FunctionComponent<Props> = (props: Props) => {\n    const { id, open, onClose, onSave } = props;\n    const classes = useStyles();\n    const [name, setName] = useState(props.name || \"\");\n    const [code, setCode] = useState(props.code || \"\");\n    const [discount, setDiscount] = useState(props.discount || 0);\n    const [duration, setDuration] = useState(props.duration || \"forever\");\n    const [active, setActive] = useState(props.active || false);\n    const [maxRedemptions, setMaxRedemptions] = useState(\n        props.maxRedemptions || 1,\n    );\n    const [valid, setValid] = useState(false);\n    const previousCreating = useRef(false);\n    const previousUpdating = useRef(false);\n    const { creating, updating } = {};\n\n    const changesMade =\n        !id ||\n        props.name !== name ||\n        props.code !== code ||\n        props.discount !== discount ||\n        props.duration !== duration ||\n        props.active !== active ||\n        props.maxRedemptions !== maxRedemptions;\n\n    useEffect(() => {\n        setName(props.name || \"\");\n        setCode(props.code || \"\");\n        setDiscount(props.discount || 0);\n        setDuration(props.duration || \"forever\");\n        setActive(props.active || false);\n        setMaxRedemptions(props.maxRedemptions || 1);\n    }, [\n        props.active,\n        props.code,\n        props.discount,\n        props.duration,\n        props.maxRedemptions,\n        props.name,\n    ]);\n\n    useEffect(() => {\n        if (previousCreating.current && !creating) {\n            onClose();\n        }\n\n        previousCreating.current = creating;\n    }, [creating, onClose]);\n\n    useEffect(() => {\n        if (previousUpdating.current && !updating) {\n            onClose();\n        }\n\n        previousUpdating.current = updating;\n    }, [updating, onClose]);\n\n    const handleNameChange = useCallback((event) => {\n        setName(event.target.value);\n    }, []);\n\n    const handleCodeChange = useCallback((event) => {\n        setCode(event.target.value);\n    }, []);\n\n    const handleDiscountChange = useCallback((event) => {\n        setDiscount(event.target.value);\n    }, []);\n\n    const handleDurationChange = useCallback((event) => {\n        setDuration(event.target.value);\n    }, []);\n\n    const handleActiveChange = useCallback((event) => {\n        setActive(event.target.value);\n    }, []);\n\n    const handleMaxRedemptionsChange = useCallback((event) => {\n        setMaxRedemptions(parseInt(event.target.value, 10) || 1);\n    }, []);\n\n    const handleValidForm = useCallback(() => {\n        setValid(true);\n    }, []);\n\n    const handleInvalidForm = useCallback(() => {\n        setValid(false);\n    }, []);\n\n    const handleSave = useCallback(() => {\n        onSave({\n            id,\n            name,\n            code,\n            discount,\n            duration,\n            active,\n            maxRedemptions,\n        });\n    }, [active, code, discount, duration, id, maxRedemptions, name, onSave]);\n\n    return (\n        <Drawer anchor=\"right\" open={open} onClose={onClose}>\n            <div className={classes.root}>\n                <div className={classes.top}>\n                    <AppBar position=\"sticky\">\n                        <Toolbar className={classes.toolbar}>\n                            <div className={classes.toolbarContent}>\n                                <Typography className={classes.title}>\n                                    {id ? \"Edit Coupon\" : \"New Coupon\"}\n                                </Typography>\n                            </div>\n                        </Toolbar>\n                    </AppBar>\n                    <Formsy\n                        className={classes.form}\n                        onValid={handleValidForm}\n                        onInvalid={handleInvalidForm}>\n                        <TextField\n                            name=\"name\"\n                            className={classes.name}\n                            label=\"Name\"\n                            validations={{\n                                minLength: 4,\n                                maxLength: 48,\n                            }}\n                            validationErrors={{\n                                minLength:\n                                    \"The name should have 4-48 characters\",\n                                maxLength:\n                                    \"The name should have 4-48 characters\",\n                            }}\n                            variant=\"outlined\"\n                            size=\"medium\"\n                            value={name}\n                            onChange={handleNameChange}\n                            required={true}\n                            fullWidth={true}\n                        />\n                        <TextField\n                            name=\"code\"\n                            className={classes.code}\n                            label=\"Code\"\n                            validations={{\n                                minLength: 4,\n                                maxLength: 16,\n                            }}\n                            validationErrors={{\n                                minLength:\n                                    \"The code should have 4-16 characters\",\n                                maxLength:\n                                    \"The code should have 4-16 characters\",\n                            }}\n                            variant=\"outlined\"\n                            size=\"medium\"\n                            value={code}\n                            onChange={handleCodeChange}\n                            required={true}\n                            fullWidth={true}\n                        />\n                        <TextField\n                            name=\"discount\"\n                            className={classes.discount}\n                            label=\"Discount\"\n                            validations={{\n                                isNumeric: true,\n                            }}\n                            validationErrors={{\n                                isNumeric: \"Enter a valid discount\",\n                            }}\n                            variant=\"outlined\"\n                            size=\"medium\"\n                            value={discount}\n                            onChange={handleDiscountChange}\n                            required={true}\n                            fullWidth={true}\n                        />\n                        <FormControl\n                            variant=\"outlined\"\n                            className={classes.duration}\n                            size=\"medium\"\n                            required={true}>\n                            <InputLabel id=\"durationLabel\">Duration</InputLabel>\n                            <Select\n                                labelId=\"durationLabel\"\n                                value={duration}\n                                onChange={handleDurationChange}\n                                label=\"Duration\">\n                                {durations.map((duration) => (\n                                    <MenuItem\n                                        key={duration.value}\n                                        value={duration.value}>\n                                        {duration.title}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                        <TextField\n                            name=\"maxRedemptions\"\n                            className={classes.maxRedemptions}\n                            label=\"Max Redemptions\"\n                            validations={{\n                                isInt: true,\n                            }}\n                            validationErrors={{\n                                isInt: \"Enter a valid redemption limit\",\n                            }}\n                            variant=\"outlined\"\n                            size=\"medium\"\n                            value={maxRedemptions}\n                            onChange={handleMaxRedemptionsChange}\n                            required={true}\n                            fullWidth={true}\n                        />\n                    </Formsy>\n                </div>\n                <div className={classes.actions}>\n                    <Button\n                        variant=\"outlined\"\n                        className={classes.action}\n                        onClick={onClose}>\n                        Cancel\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        className={classes.action}\n                        disabled={\n                            !changesMade || !valid || creating || updating\n                        }\n                        onClick={handleSave}>\n                        {(creating || updating) && (\n                            <CircularProgress\n                                size=\"16px\"\n                                color=\"inherit\"\n                                className={classes.progress}\n                            />\n                        )}\n                        Save\n                    </Button>\n                </div>\n            </div>\n        </Drawer>\n    );\n};\n\nexport default SectionEditor;\n","import { FunctionComponent, useState, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { useAppSelector } from \"../../redux/hooks\";\nimport NoRecords from \"../common/NoRecords\";\nimport CouponEditor from \"./CouponEditor\";\n\nconst useStyles = makeStyles(() => ({\n    noRecords: {\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        height: \"calc(100vh - 128px)\"\n    },\n}));\n\nconst CourseDetails: FunctionComponent = () => {\n    const classes = useStyles();\n    const { firstName } = useAppSelector((state) => state.session.payload);\n    const [openCouponEditor, setOpenCouponEditor] = useState(false);\n\n    const handleCloseCouponEditor = useCallback(() => {\n        setOpenCouponEditor(false);\n    }, []);\n\n    const handleSaveCoupon = useCallback(() => {\n        setOpenCouponEditor(false);\n    }, []);\n\n    const handleNewCoupon = useCallback(() => {\n        setOpenCouponEditor(true);\n    }, [setOpenCouponEditor]);\n\n    return (\n        <>\n            <div className={classes.noRecords}>\n                <NoRecords\n                    message={`Are you ready to create your first coupon, ${firstName}?`}\n                    actionText=\"Create New Coupon\"\n                    actionHandler={handleNewCoupon}\n                    image={`${process.env.PUBLIC_URL}/assets/images/empty-articles.svg`}\n                    action={true}\n                />\n            </div>\n            <CouponEditor\n                open={openCouponEditor}\n                onClose={handleCloseCouponEditor}\n                onSave={handleSaveCoupon}\n            />\n        </>\n    );\n};\n\nexport default CourseDetails;\n","import { FunctionComponent, useCallback } from \"react\";\nimport { Radio, Checkbox, Icon, IconButton } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport TextField from \"../common/FormsyTextField\";\nimport { useHover } from \"../../hooks\";\nimport { QuestionType } from \"../../types\";\n\nconst useStyles = makeStyles((theme) => ({\n    option: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        marginTop: theme.spacing(2),\n    },\n    left: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        marginRight: theme.spacing(2),\n    },\n    right: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-end\",\n        alignItems: \"center\",\n    },\n    optionCheckbox: {},\n    optionText: {\n        marginLeft: theme.spacing(1),\n        width: 340,\n    },\n    actionIcon: {\n        fontSize: 18,\n    },\n}));\n\ninterface Props {\n    index: number;\n    text: string;\n    correct: boolean;\n    type: QuestionType;\n    onDelete?: (index: number) => void;\n    onNew: (index: number) => void;\n    onTextChange: (index: number, text: string) => void;\n    onCorrectChange: (index: number, correct: boolean) => void;\n}\n\nconst QuestionOption: FunctionComponent<Props> = (props: Props) => {\n    const {\n        text,\n        correct,\n        index,\n        type,\n        onNew,\n        onDelete,\n        onTextChange,\n        onCorrectChange,\n    } = props;\n    const { hover, onMouseEnter, onMouseLeave } = useHover();\n    const classes = useStyles();\n\n    const handleDelete = useCallback(() => {\n        onDelete && onDelete(index);\n    }, [index, onDelete]);\n\n    const handleNew = useCallback(() => {\n        onNew(index);\n    }, [index, onNew]);\n\n    const handleTextChange = useCallback(\n        (event) => {\n            onTextChange(index, event.target.value);\n        },\n        [index, onTextChange],\n    );\n\n    const handleCorrectChange = useCallback(\n        (event) => {\n            onCorrectChange(index, event.target.checked);\n        },\n        [index, onCorrectChange],\n    );\n\n    const renderActions = () => (\n        <div className={classes.right}>\n            {onDelete && (\n                <IconButton onClick={handleDelete}>\n                    <Icon className={classes.actionIcon}>delete</Icon>\n                </IconButton>\n            )}\n            <IconButton onClick={handleNew}>\n                <Icon className={classes.actionIcon}>add_circle</Icon>\n            </IconButton>\n        </div>\n    );\n\n    const Checked = type === \"single_correct_option\" ? Radio : Checkbox;\n\n    return (\n        <div\n            className={classes.option}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}>\n            <div className={classes.left}>\n                <Checked\n                    onChange={handleCorrectChange}\n                    checked={correct}\n                    className={classes.optionCheckbox}\n                />\n                <TextField\n                    name={`option-${index}`}\n                    className={classes.optionText}\n                    validations={{\n                        minLength: 1,\n                        maxLength: 504,\n                    }}\n                    validationErrors={{\n                        minLength: \"The option should have 1-128 characters\",\n                        maxLength: \"The option should have 1-128 characters\",\n                    }}\n                    size=\"medium\"\n                    value={text}\n                    fullWidth={true}\n                    placeholder={`Option ${index + 1}`}\n                    onChange={handleTextChange}\n                />\n            </div>\n            {hover && renderActions()}\n        </div>\n    );\n};\n\nexport default QuestionOption;\n","import { useState, useCallback, FunctionComponent } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Card,\n    CardContent,\n    CardActions,\n    FormControl,\n    IconButton,\n    Icon,\n    InputLabel,\n    Select,\n    MenuItem,\n} from \"@material-ui/core\";\nimport Formsy from \"formsy-react\";\nimport lodash from \"lodash\";\n\nimport TextField from \"../common/FormsyTextField\";\nimport { QuestionType, QuestionOption } from \"../../types\";\nimport QuestionOptionUI from \"./QuestionOption\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        marginTop: theme.spacing(4),\n        maxWidth: 800,\n    },\n    content: {},\n    question: {},\n    type: {\n        marginTop: theme.spacing(2),\n        maxWidth: 400,\n    },\n    options: {\n        marginTop: theme.spacing(3),\n    },\n    actions: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-end\",\n    },\n}));\n\ninterface Props {\n    index: number;\n    text: string;\n    type: \"single_correct_option\" | \"multiple_correct_options\";\n    options: QuestionOption[];\n    onTextChange: (index: number, text: string) => void;\n    onTypeChange: (\n        index: number,\n        type: \"single_correct_option\" | \"multiple_correct_options\",\n    ) => void;\n    onOptionsChange: (index: number, options: QuestionOption[]) => void;\n    onNew: (index: number) => void;\n}\n\nconst EMPTY_OPTION: QuestionOption = {\n    text: \"\",\n    correct: false,\n};\n\nconst QuestionEditor: FunctionComponent<Props> = (props: Props) => {\n    const {\n        index,\n        text,\n        type,\n        options,\n        onTextChange,\n        onTypeChange,\n        onNew,\n        onDuplicate,\n        onDelete,\n        onOptionsChange,\n    } = props;\n    const classes = useStyles();\n    const [valid, setValid] = useState(false);\n\n    const handleValidForm = useCallback(() => {\n        setValid(true);\n    }, []);\n\n    const handleInvalidForm = useCallback(() => {\n        setValid(false);\n    }, []);\n\n    const handleTextChange = useCallback(\n        (event) => {\n            onTextChange(index, event.target.value);\n        },\n        [onTextChange, index],\n    );\n\n    const handleTypeChange = useCallback(\n        (event) => {\n            const newOptions = lodash.cloneDeep(options);\n            for (const option of newOptions) {\n                option.correct = false;\n            }\n            onTypeChange(index, event.target.value as QuestionType);\n        },\n        [options, index, onTypeChange],\n    );\n\n    const handleNewQuestion = useCallback(() => {\n        onNew(index);\n    }, [onNew, index]);\n\n    const handleDuplicateQuestion = useCallback(() => {\n        onDuplicate(index);\n    }, [index, onDuplicate]);\n\n    const handleDeleteQuestion = useCallback(() => {\n        onDelete(index);\n    }, [index, onDelete]);\n\n    const handleOptionTextChange = useCallback(\n        (optionIndex: number, text: string) => {\n            const newOption = {\n                ...options[optionIndex],\n                text,\n            };\n            const newOptions = [...options];\n            newOptions[optionIndex] = newOption;\n            onOptionsChange(index, newOptions);\n        },\n        [index, onOptionsChange, options],\n    );\n\n    const handleOptionCorrectChange = useCallback(\n        (optionIndex: number, correct: boolean) => {\n            const newOptions = [...options];\n\n            if (type === \"single_correct_option\") {\n                const oldOptionIndex = options.findIndex(\n                    (option) => option.correct,\n                );\n                if (oldOptionIndex >= 0) {\n                    const oldOption = {\n                        ...options[oldOptionIndex],\n                        correct: false,\n                    };\n                    newOptions[oldOptionIndex] = oldOption;\n                }\n            }\n\n            const newOption = {\n                ...options[optionIndex],\n                correct,\n            };\n            newOptions[optionIndex] = newOption;\n            onOptionsChange(index, newOptions);\n        },\n        [index, onOptionsChange, options, type],\n    );\n\n    const handleNewOption = useCallback(\n        (optionIndex: number) => {\n            const newOptions: QuestionOption[] = [\n                ...options.slice(0, optionIndex + 1),\n                EMPTY_OPTION,\n                ...options.slice(optionIndex + 1),\n            ];\n            onOptionsChange(index, newOptions);\n        },\n        [index, onOptionsChange, options],\n    );\n\n    const handleDeleteOption = useCallback(\n        (optionIndex: number) => {\n            const newOptions = [\n                ...options.slice(0, optionIndex),\n                ...options.slice(optionIndex + 1),\n            ];\n            onOptionsChange(index, newOptions);\n        },\n        [index, onOptionsChange, options],\n    );\n\n    const renderOption = (option: QuestionOption, index: number) => (\n        <QuestionOptionUI\n            key={index}\n            index={index}\n            type={type}\n            text={option.text}\n            correct={option.correct}\n            onDelete={(options.length > 2 && handleDeleteOption) || undefined}\n            onNew={handleNewOption}\n            onTextChange={handleOptionTextChange}\n            onCorrectChange={handleOptionCorrectChange}\n        />\n    );\n\n    return (\n        <Card className={classes.card}>\n            <CardContent className={classes.content}>\n                <Formsy onValid={handleValidForm} onInvalid={handleInvalidForm}>\n                    <div className={classes.header}>\n                        <TextField\n                            name=\"question\"\n                            className={classes.question}\n                            label=\"Question\"\n                            validations={{\n                                minLength: 8,\n                                maxLength: 504,\n                            }}\n                            validationErrors={{\n                                minLength:\n                                    \"The question should have 8-504 characters\",\n                                maxLength:\n                                    \"The question should have 8-504 characters\",\n                            }}\n                            variant=\"outlined\"\n                            size=\"medium\"\n                            value={text}\n                            onChange={handleTextChange}\n                            required={true}\n                            fullWidth={true}\n                            multiline={true}\n                            minRows={1}\n                        />\n\n                        <FormControl\n                            variant=\"outlined\"\n                            className={classes.type}\n                            fullWidth={true}>\n                            <InputLabel id=\"type\">Type</InputLabel>\n                            <Select\n                                labelId=\"type\"\n                                value={type}\n                                onChange={handleTypeChange}\n                                label=\"Type\">\n                                <MenuItem value=\"single_correct_option\">\n                                    Single Correct Option\n                                </MenuItem>\n                                <MenuItem value=\"multiple_correct_options\">\n                                    Multiple Correct Options\n                                </MenuItem>\n                            </Select>\n                        </FormControl>\n                    </div>\n\n                    <div className={classes.options}>\n                        {options.map(renderOption)}\n                    </div>\n                </Formsy>\n            </CardContent>\n            <CardActions disableSpacing={true} className={classes.actions}>\n                <IconButton onClick={handleNewQuestion}>\n                    <Icon fontSize=\"small\">add_circle</Icon>\n                </IconButton>\n                <IconButton onClick={handleDuplicateQuestion}>\n                    <Icon fontSize=\"small\">content_copy</Icon>\n                </IconButton>\n                <IconButton onClick={handleDeleteQuestion}>\n                    <Icon fontSize=\"small\">delete</Icon>\n                </IconButton>\n            </CardActions>\n        </Card>\n    );\n};\n\nexport default QuestionEditor;\n","import { useState, useCallback, useEffect, FunctionComponent } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Formsy from \"formsy-react\";\nimport {\n    Card,\n    CardContent,\n    Button,\n    CircularProgress,\n    Icon,\n    Typography,\n} from \"@material-ui/core\";\nimport lodash from \"lodash\";\n\nimport { Question, QuestionType, QuestionOption } from \"../../types\";\nimport TextField from \"../common/FormsyTextField\";\nimport QuestionEditor from \"./QuestionEditor\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 800,\n    },\n    title: {},\n    description: {\n        marginTop: theme.spacing(2),\n    },\n    actions: {\n        marginTop: theme.spacing(2),\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        flexDirection: \"row\",\n    },\n    action: {\n        width: 128,\n        marginTop: theme.spacing(2),\n    },\n    actionIcon: {\n        marginRight: theme.spacing(1),\n    },\n    progress: {\n        marginRight: theme.spacing(1),\n    },\n    secondaryActions: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        width: \"100%\",\n    },\n    newQuestion: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        marginTop: theme.spacing(2),\n        alignSelf: \"center\",\n        borderRadius: theme.shape.borderRadius,\n    },\n    newQuestionIcon: {\n        color: \"white\",\n        marginRight: theme.spacing(1),\n        fontSize: 18,\n    },\n    newQuestionTitle: { color: \"white\", fontSize: 14 },\n}));\n\nconst EMPTY_QUESTION: Question = {\n    text: \"\",\n    type: \"single_correct_option\",\n    options: [\n        {\n            text: \"\",\n            correct: true,\n        },\n        {\n            text: \"\",\n            correct: false,\n        },\n    ],\n};\n\ninterface Props {\n    title: string;\n    description: string;\n    questions: Question[];\n    updating: boolean;\n    onSave: (title: string, description: string, questions: Question[]) => void;\n}\n\nconst QuizEditor: FunctionComponent<Props> = (props: Props) => {\n    const { onSave, updating } = props;\n    const classes = useStyles();\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [questions, setQuestions] = useState<Question[]>([EMPTY_QUESTION]);\n    const [valid, setValid] = useState(false);\n\n    useEffect(() => {\n        setDescription(props.description);\n        setTitle(props.title);\n        setQuestions(props.questions);\n    }, [props.description, props.title, props.questions]);\n\n    const handleTitleChange = useCallback((event) => {\n        setTitle(event.target.value);\n    }, []);\n\n    const handleDescriptionChange = useCallback((event) => {\n        setDescription(event.target.value);\n    }, []);\n\n    const handleValidForm = useCallback(() => {\n        setValid(true);\n    }, []);\n\n    const handleInvalidForm = useCallback(() => {\n        setValid(false);\n    }, []);\n\n    /* NOTE: We do not make deep clones of questions. Since the question objects\n     * are immutable, whenever a question is changed, we clone only that particular\n     * question. A new questions array is created and all the remaining questions\n     * are carried over.\n     */\n\n    const handleQuestionTextChange = useCallback(\n        (index: number, text: string) => {\n            const newQuestion = lodash.cloneDeep(questions[index]);\n            newQuestion.text = text;\n\n            const newQuestions = [...questions];\n            newQuestions[index] = newQuestion;\n            setQuestions(newQuestions);\n        },\n        [questions, setQuestions],\n    );\n\n    const handleQuestionTypeChange = useCallback(\n        (index: number, type: QuestionType) => {\n            const newQuestion = lodash.cloneDeep(questions[index]);\n            newQuestion.type = type;\n            for (const option of newQuestion.options) {\n                option.correct = false;\n            }\n            newQuestion.options[0].correct = true;\n\n            const newQuestions = [...questions];\n            newQuestions[index] = newQuestion;\n            setQuestions(newQuestions);\n        },\n        [questions, setQuestions],\n    );\n\n    const handleQuestionOptionsChange = useCallback(\n        (index: number, options: QuestionOption[]) => {\n            const newQuestion = lodash.cloneDeep(questions[index]);\n            newQuestion.options = options;\n\n            const newQuestions = [...questions];\n            newQuestions[index] = newQuestion;\n            setQuestions(newQuestions);\n        },\n        [questions, setQuestions],\n    );\n\n    const handleNewQuestion = useCallback(\n        (index: number) => {\n            const newQuestions = [\n                ...questions.slice(0, index + 1),\n                EMPTY_QUESTION,\n                ...questions.slice(index + 1),\n            ];\n            setQuestions(newQuestions);\n        },\n        [questions],\n    );\n\n    const handleDuplicateQuestion = useCallback(\n        (index: number) => {\n            const duplicateQuestion = lodash.cloneDeep(questions[index]);\n            const newQuestions = [\n                ...questions.slice(0, index + 1),\n                duplicateQuestion,\n                ...questions.slice(index + 1),\n            ];\n            setQuestions(newQuestions);\n        },\n        [questions],\n    );\n\n    const handleDeleteQuestion = useCallback(\n        (index: number) => {\n            const newQuestions = [\n                ...questions.slice(0, index),\n                ...questions.slice(index + 1),\n            ];\n            setQuestions(newQuestions);\n        },\n        [questions],\n    );\n\n    const handleAddQuestion = useCallback(() => {\n        handleNewQuestion(0);\n    }, [handleNewQuestion]);\n\n    const handleSave = useCallback(() => {\n        onSave(title, description, questions);\n    }, [description, onSave, questions, title]);\n\n    const changesMade =\n        props.title !== title ||\n        props.description !== description ||\n        !lodash.isEqual(props.questions, questions);\n\n    return (\n        <div className={classes.root}>\n            <Card>\n                <CardContent>\n                    <Formsy\n                        onValid={handleValidForm}\n                        onInvalid={handleInvalidForm}>\n                        <TextField\n                            name=\"title\"\n                            className={classes.title}\n                            label=\"Title\"\n                            validations={{\n                                minLength: 8,\n                                maxLength: 504,\n                            }}\n                            validationErrors={{\n                                minLength:\n                                    \"The title should have 8-504 characters\",\n                                maxLength:\n                                    \"The title should have 8-504 characters\",\n                            }}\n                            variant=\"outlined\"\n                            size=\"medium\"\n                            value={title}\n                            onChange={handleTitleChange}\n                            required={true}\n                            fullWidth={true}\n                        />\n                        <TextField\n                            name=\"description\"\n                            className={classes.description}\n                            label=\"Description\"\n                            validations={{\n                                maxLength: 1024,\n                            }}\n                            validationErrors={{\n                                maxLength:\n                                    \"The description cannot be longer than 1024 characters\",\n                            }}\n                            variant=\"outlined\"\n                            size=\"medium\"\n                            value={description}\n                            onChange={handleDescriptionChange}\n                            fullWidth={true}\n                            multiline={true}\n                            rows={5}\n                        />\n                    </Formsy>\n                </CardContent>\n            </Card>\n            {questions.map((question, index) => (\n                <QuestionEditor\n                    index={index}\n                    text={question.text}\n                    type={question.type}\n                    options={question.options}\n                    onTextChange={handleQuestionTextChange}\n                    onTypeChange={handleQuestionTypeChange}\n                    onOptionsChange={handleQuestionOptionsChange}\n                    onNew={handleNewQuestion}\n                    onDuplicate={handleDuplicateQuestion}\n                    onDelete={handleDeleteQuestion}\n                />\n            ))}\n            {questions.length === 0 && (\n                <div className={classes.secondaryActions}>\n                    <Button\n                        onClick={handleAddQuestion}\n                        className={classes.newQuestion}>\n                        <Icon className={classes.newQuestionIcon}>\n                            add_circle\n                        </Icon>\n                        <Typography className={classes.newQuestionTitle}>\n                            New Question\n                        </Typography>\n                    </Button>\n                </div>\n            )}\n            <div className={classes.actions}>\n                <Button\n                    variant=\"contained\"\n                    className={classes.action}\n                    disabled={!changesMade || !valid || updating}\n                    onClick={handleSave}>\n                    {updating && (\n                        <CircularProgress\n                            size=\"16px\"\n                            color=\"inherit\"\n                            className={classes.progress}\n                        />\n                    )}\n                    {!updating && (\n                        <Icon className={classes.actionIcon}>save</Icon>\n                    )}\n                    Save\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default QuizEditor;\n","import {\n    Fragment,\n    FunctionComponent,\n    useState,\n    useEffect,\n    useCallback,\n} from \"react\";\nimport {\n    Chip,\n    Typography,\n    Button,\n    CircularProgress,\n    Icon,\n} from \"@material-ui/core\";\nimport { Autocomplete, createFilterOptions } from \"@material-ui/lab\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Formsy from \"formsy-react\";\nimport { gql, useLazyQuery } from \"@apollo/client\";\n\nimport TextField from \"../common/FormsyTextField\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyExercise: \"flex-start\",\n        width: \"100%\",\n        maxWidth: 800,\n    },\n    title: {},\n    description: {\n        marginTop: theme.spacing(2),\n    },\n\n    exercise: {\n        width: \"100%\",\n        marginTop: theme.spacing(2),\n    },\n    exerciseOption: {\n        flexDirection: \"row\",\n        display: \"flex\",\n        paddingTop: 4,\n        paddingBottom: 4,\n    },\n    exerciseTexts: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginLeft: 16,\n    },\n    exerciseOptionHandle: {\n        fontSize: 14,\n        fontWeight: \"bold\",\n    },\n    exerciseOptionTitle: {\n        fontSize: 12,\n    },\n    exerciseTitle: {\n        marginTop: theme.spacing(4),\n        fontWeight: \"bold\",\n        fontSize: 16,\n    },\n    exerciseDescription: {\n        marginTop: theme.spacing(2),\n    },\n    testListItem: {\n        marginTop: theme.spacing(1),\n    },\n    exerciseTag: {\n        marginLeft: theme.spacing(1),\n    },\n    actions: {\n        marginTop: theme.spacing(4),\n        width: \"100%\",\n        display: \"flex\",\n        justifyExercise: \"flex-end\",\n        flexDirection: \"row\",\n    },\n    action: {\n        width: 128,\n    },\n    actionIcon: {\n        marginRight: theme.spacing(1),\n    },\n    progress: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\ninterface Props {\n    title: string;\n    description: string;\n    exercise: string | undefined;\n    updating: boolean;\n    onSave: (title: string, description: string, exercise?: string) => void;\n}\n\nconst GET_TEST_SUITES = gql`\n    query GetTestSuites($search: String) {\n        getTestSuites(search: $search) {\n            records {\n                id\n                handle\n                title\n                description\n                tags\n                tests {\n                    id\n                    title\n                    description\n                }\n            }\n        }\n    }\n`;\n\nconst LessonEditor: FunctionComponent<Props> = (props: Props) => {\n    const { onSave, updating } = props;\n    const classes = useStyles();\n    const [valid, setValid] = useState(false);\n    const [title, setTitle] = useState(\"\");\n    const [exercise, setExercise] = useState<any | null>(null);\n    const [description, setDescription] = useState(\"\");\n    const [search, setSearch] = useState(\"\");\n\n    const [exerciseOptionsOpen, setExerciseOptionsOpen] = useState(false);\n\n    const [\n        fetchTestSuites,\n        { loading: fetching, error: fetchError, data, previousData },\n    ] = useLazyQuery(GET_TEST_SUITES);\n\n    console.log(data?.getTestSuites);\n\n    const changesMade =\n        props?.title !== title ||\n        props?.exercise !== exercise ||\n        props?.description !== description;\n\n    useEffect(() => {\n        setTitle(props.title || \"\");\n        setDescription(props.description || \"\");\n        setExercise(props.exercise || null);\n    }, [props.exercise, props.description, props.title]);\n\n    const handleTitleChange = useCallback((event) => {\n        setTitle(event.target.value);\n    }, []);\n\n    const handleDescriptionChange = useCallback((event) => {\n        setDescription(event.target.value);\n    }, []);\n\n    const handleValidForm = useCallback(() => {\n        setValid(true);\n    }, []);\n\n    const handleInvalidForm = useCallback(() => {\n        setValid(false);\n    }, []);\n\n    const handleSave = useCallback(() => {\n        onSave(title, description, exercise?.id ?? null);\n    }, [exercise?.id, onSave, title, description]);\n\n    const handleSearchChange = useCallback(\n        (event: any) => {\n            setSearch(event.target.value);\n            fetchTestSuites({\n                variables: { search: event.target.value },\n            });\n        },\n        [fetchTestSuites],\n    );\n\n    const handleExerciseChange = (_event: any, newExercise: any) => {\n        setExercise(newExercise);\n    };\n\n    const exerciseFilterOptions = createFilterOptions({\n        matchFrom: \"any\",\n        ignoreAccents: true,\n        ignoreCase: true,\n        stringify: (option: any) => option.handle,\n    });\n\n    const handleExerciseOptionsToggle = useCallback(() => {\n        setExerciseOptionsOpen((exerciseOptionsOpen) => !exerciseOptionsOpen);\n    }, []);\n\n    const renderOption = useCallback(\n        (option: any) => (\n            <div className={classes.exerciseOption}>\n                <div className={classes.exerciseTexts}>\n                    <span className={classes.exerciseOptionHandle}>\n                        {option.handle}\n                    </span>\n                    <span className={classes.exerciseOptionTitle}>\n                        {option.title}\n                    </span>\n                </div>\n            </div>\n        ),\n        [\n            classes.exerciseOption,\n            classes.exerciseOptionHandle,\n            classes.exerciseOptionTitle,\n            classes.exerciseTexts,\n        ],\n    );\n\n    const renderInput = useCallback(\n        (params0) => (\n            <TextField\n                name=\"exercise\"\n                {...params0}\n                label=\"Exercise\"\n                variant=\"outlined\"\n                InputProps={{\n                    ...params0.InputProps,\n                    endAdornment: (\n                        <Fragment>\n                            {fetching ? (\n                                <CircularProgress color=\"inherit\" size={20} />\n                            ) : null}\n                            {params0.InputProps.endAdornment}\n                        </Fragment>\n                    ),\n                }}\n                value={search}\n                onChange={handleSearchChange}\n            />\n        ),\n        [fetching, handleSearchChange, search],\n    );\n\n    const getOptionsSelected = useCallback(\n        (option: any, value: any) => option.id === value.id,\n        [],\n    );\n\n    const getOptionLabel = useCallback(\n        (option: any) => option.handle || \"<unavailable>\",\n        [],\n    );\n\n    const renderExerciseSelect = () => (\n        <Autocomplete\n            filterOptions={exerciseFilterOptions}\n            open={exerciseOptionsOpen}\n            onOpen={handleExerciseOptionsToggle}\n            onClose={handleExerciseOptionsToggle}\n            renderOption={renderOption}\n            className={classes.exercise}\n            options={\n                data?.getTestSuites?.records ??\n                previousData?.getTestSuites?.records ??\n                []\n            }\n            loading={!previousData?.getTestSuites?.records && fetching}\n            renderInput={renderInput}\n            getOptionSelected={getOptionsSelected}\n            getOptionLabel={getOptionLabel}\n            value={exercise}\n            onChange={handleExerciseChange}\n        />\n    );\n\n    const renderTestSuite = () => (\n        <div style={{ color: \"white\" }}>\n            <Typography className={classes.exerciseTitle}>\n                {exercise?.title ?? \"<invalid_title>\"}\n            </Typography>\n\n            <Typography className={classes.exerciseDescription}>\n                {exercise?.description ?? \"<invalid_description>\"}\n            </Typography>\n\n            <ul>\n                {exercise?.tests.map((test: any) => (\n                    <li className={classes.testListItem}>\n                        <div>\n                            <Typography>{test.title}</Typography>\n                            <Typography>{test.description}</Typography>\n                        </div>\n                    </li>\n                ))}\n            </ul>\n\n            {exercise?.tags.map((tag: string) => (\n                <Chip label={tag} className={classes.exerciseTag} />\n            ))}\n        </div>\n    );\n\n    return (\n        <div className={classes.root}>\n            <Formsy onValid={handleValidForm} onInvalid={handleInvalidForm}>\n                <TextField\n                    name=\"title\"\n                    className={classes.title}\n                    label=\"Title\"\n                    validations={{\n                        minLength: 8,\n                        maxLength: 504,\n                    }}\n                    validationErrors={{\n                        minLength: \"The title should have 8-504 characters\",\n                        maxLength: \"The title should have 8-504 characters\",\n                    }}\n                    variant=\"outlined\"\n                    size=\"medium\"\n                    value={title}\n                    onChange={handleTitleChange}\n                    required={true}\n                    fullWidth={true}\n                />\n\n                <TextField\n                    name=\"description\"\n                    className={classes.description}\n                    label=\"Description\"\n                    validations={{\n                        maxLength: 1024,\n                    }}\n                    validationErrors={{\n                        maxLength:\n                            \"The description cannot be longer than 1024 characters\",\n                    }}\n                    variant=\"outlined\"\n                    size=\"medium\"\n                    value={description}\n                    onChange={handleDescriptionChange}\n                    fullWidth={true}\n                    multiline={true}\n                    rows={5}\n                />\n                {renderExerciseSelect()}\n                {exercise && renderTestSuite()}\n            </Formsy>\n            <div className={classes.actions}>\n                <Button\n                    variant=\"contained\"\n                    className={classes.action}\n                    disabled={!changesMade || !valid || updating}\n                    onClick={handleSave}>\n                    {updating && (\n                        <CircularProgress\n                            size=\"16px\"\n                            color=\"inherit\"\n                            className={classes.progress}\n                        />\n                    )}\n                    {!updating && (\n                        <Icon className={classes.actionIcon}>save</Icon>\n                    )}\n                    Save\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default LessonEditor;\n","import { FunctionComponent, useState, useEffect, useCallback } from \"react\";\nimport { Button, CircularProgress, Icon } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Formsy from \"formsy-react\";\n\nimport TextField from \"../common/FormsyTextField\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"flex-start\",\n        width: \"100%\",\n        maxWidth: 800,\n    },\n    title: {},\n    description: {\n        marginTop: theme.spacing(2),\n    },\n    content: {\n        marginTop: theme.spacing(2),\n    },\n    contentTextArea: {\n        resize: \"vertical\",\n        minHeight: 400,\n        width: \"100%\",\n    },\n    actions: {\n        marginTop: theme.spacing(2),\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        flexDirection: \"row\",\n    },\n    action: {\n        width: 128,\n    },\n    actionIcon: {\n        marginRight: theme.spacing(1),\n    },\n    progress: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\ninterface Props {\n    title: string;\n    description: string;\n    content: string;\n    updating: boolean;\n    onSave: (title: string, description: string, content: string) => void;\n}\n\nconst LessonEditor: FunctionComponent<Props> = (props: Props) => {\n    const { onSave, updating } = props;\n    const classes = useStyles();\n    const [valid, setValid] = useState(false);\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n\n    const changesMade =\n        props?.title !== title ||\n        props?.content !== content ||\n        props?.description !== description;\n\n    useEffect(() => {\n        setTitle(props.title || \"\");\n        setDescription(props.description || \"\");\n        setContent(props.content || \"\");\n    }, [props.content, props.description, props.title]);\n\n    const handleTitleChange = useCallback((event) => {\n        setTitle(event.target.value);\n    }, []);\n\n    const handleDescriptionChange = useCallback((event) => {\n        setDescription(event.target.value);\n    }, []);\n\n    const handleContentChange = useCallback((event) => {\n        setContent(event.target.value);\n    }, []);\n\n    const handleValidForm = useCallback(() => {\n        setValid(true);\n    }, []);\n\n    const handleInvalidForm = useCallback(() => {\n        setValid(false);\n    }, []);\n\n    const handleSave = useCallback(() => {\n        onSave(title, description, content);\n    }, [description, onSave, content, title]);\n\n    return (\n        <div className={classes.root}>\n            <Formsy onValid={handleValidForm} onInvalid={handleInvalidForm}>\n                <TextField\n                    name=\"title\"\n                    className={classes.title}\n                    label=\"Title\"\n                    validations={{\n                        minLength: 8,\n                        maxLength: 504,\n                    }}\n                    validationErrors={{\n                        minLength: \"The title should have 8-504 characters\",\n                        maxLength: \"The title should have 8-504 characters\",\n                    }}\n                    variant=\"outlined\"\n                    size=\"medium\"\n                    value={title}\n                    onChange={handleTitleChange}\n                    required={true}\n                    fullWidth={true}\n                />\n\n                <TextField\n                    name=\"description\"\n                    className={classes.description}\n                    label=\"Description\"\n                    validations={{\n                        maxLength: 1024,\n                    }}\n                    validationErrors={{\n                        maxLength:\n                            \"The description cannot be longer than 1024 characters\",\n                    }}\n                    variant=\"outlined\"\n                    size=\"medium\"\n                    value={description}\n                    onChange={handleDescriptionChange}\n                    fullWidth={true}\n                    multiline={true}\n                    rows={5}\n                />\n                <TextField\n                    name=\"content\"\n                    className={classes.content}\n                    label=\"Content\"\n                    validations={{\n                        maxLength: 10240,\n                    }}\n                    validationErrors={{\n                        maxLength:\n                            \"The article content cannot be longer than 10240 characters\",\n                    }}\n                    variant=\"outlined\"\n                    size=\"medium\"\n                    value={content}\n                    onChange={handleContentChange}\n                    fullWidth={true}\n                    multiline={true}\n                    inputProps={{\n                        className: classes.contentTextArea,\n                    }}\n                />\n            </Formsy>\n            <div className={classes.actions}>\n                <Button\n                    variant=\"contained\"\n                    className={classes.action}\n                    disabled={!changesMade || !valid || updating}\n                    onClick={handleSave}>\n                    {updating && (\n                        <CircularProgress\n                            size=\"16px\"\n                            color=\"inherit\"\n                            className={classes.progress}\n                        />\n                    )}\n                    {!updating && (\n                        <Icon className={classes.actionIcon}>save</Icon>\n                    )}\n                    Save\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default LessonEditor;\n","import { FunctionComponent, useCallback } from \"react\";\nimport { CircularProgress, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useParams } from \"react-router\";\nimport { gql, useQuery, useMutation } from \"@apollo/client\";\n\nimport { Question } from \"../../types\";\nimport QuizEditor from \"./QuizEditor\";\nimport ExerciseEditor from \"./ExerciseEditor\";\nimport LessonEditor from \"./LessonEditor\";\n\nconst useStyles = makeStyles((theme) => ({\n    secondaryRoot: {\n        width: \"100%\",\n        height: \"calc(100vh - 136px)\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    errorMessage: {\n        textAlign: \"center\",\n        color: \"white\",\n        fontSize: 20,\n        maxWidth: 600,\n    },\n}));\n\ninterface Params {\n    courseId: string;\n    chapterId: string;\n    sectionId: string;\n}\n\nconst GET_SECTION = gql`\n    query GetSection($sectionId: ID!) {\n        getSectionById(sectionId: $sectionId) {\n            id\n            title\n            type\n            description\n            content\n            questions {\n                text\n                type\n                options {\n                    text\n                    correct\n                }\n            }\n            exercise {\n                id\n                title\n                description\n                handle\n                tags\n                tests {\n                    id\n                    title\n                    description\n                }\n            }\n        }\n    }\n`;\n\nconst UPDATE_SECTION = gql`\n    mutation UpdateSection(\n        $sectionId: ID!\n        $title: String\n        $description: String\n        $content: String\n        $questions: [QuestionInput!]\n        $exercise: ID\n    ) {\n        updateSection(\n            sectionId: $sectionId\n            title: $title\n            description: $description\n            content: $content\n            questions: $questions\n            exercise: $exercise\n        ) {\n            id\n        }\n    }\n`;\n\nconst ContentEditor: FunctionComponent = () => {\n    const classes = useStyles();\n    const params = useParams<Params>();\n    const {\n        loading: fetching,\n        error: fetchError,\n        data: currentSectionData,\n    } = useQuery(GET_SECTION, { variables: { sectionId: params.sectionId } });\n    const [updateSection, { loading: updating, error: updateError }] =\n        useMutation(UPDATE_SECTION, {\n            refetchQueries: [GET_SECTION],\n        });\n\n    const currentSection = currentSectionData?.getSectionById || {};\n\n    const handleSaveLesson = useCallback(\n        (title: string, description: string, content: string) => {\n            updateSection({\n                variables: {\n                    sectionId: currentSection?.id,\n                    title,\n                    description,\n                    content,\n                },\n            });\n        },\n        [currentSection?.id, updateSection],\n    );\n\n    const handleSaveExercise = useCallback(\n        (title: string, description: string, exercise?: string) => {\n            console.log(exercise);\n            updateSection({\n                variables: {\n                    sectionId: currentSection?.id,\n                    title,\n                    description,\n                    exercise,\n                },\n            });\n        },\n        [currentSection?.id, updateSection],\n    );\n\n    const handleSaveQuiz = useCallback(\n        (title: string, description: string, questions: Question[]) => {\n            updateSection({\n                variables: {\n                    sectionId: currentSection?.id,\n                    title,\n                    description,\n                    questions: questions.map((question) => ({\n                        text: question.text,\n                        type: question.type,\n                        options: question.options.map((option) => ({\n                            text: option.text,\n                            correct: option.correct,\n                        })),\n                    })),\n                },\n            });\n        },\n        [currentSection?.id, updateSection],\n    );\n\n    if (currentSection.type === \"quiz\") {\n        return (\n            <QuizEditor\n                title={currentSection?.title}\n                description={currentSection?.description}\n                questions={currentSection?.questions}\n                updating={updating}\n                onSave={handleSaveQuiz}\n            />\n        );\n    }\n\n    if (currentSection.type === \"coding_excercise\") {\n        return (\n            <ExerciseEditor\n                title={currentSection?.title}\n                description={currentSection?.description}\n                exercise={currentSection?.exercise}\n                updating={updating}\n                onSave={handleSaveExercise}\n            />\n        );\n    }\n\n    if (currentSection.type === \"article\") {\n        return (\n            <LessonEditor\n                title={currentSection?.title}\n                description={currentSection?.description}\n                content={currentSection?.content}\n                updating={updating}\n                onSave={handleSaveLesson}\n            />\n        );\n    }\n\n    if (fetching) {\n        return (\n            <div className={classes.secondaryRoot}>\n                <CircularProgress />\n            </div>\n        );\n    }\n\n    return (\n        <div className={classes.secondaryRoot}>\n            <Typography className={classes.errorMessage}>\n                Error: Invalid section type \"\n                {currentSection?.type ?? \"invalid_state\"}\". Please contact the\n                administrator for further assitance.\n            </Typography>\n        </div>\n    );\n};\n\nexport default ContentEditor;\n","import {\n    FunctionComponent,\n    useEffect,\n    useRef,\n    useCallback,\n    useMemo,\n} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    CircularProgress,\n    AppBar,\n    Button,\n    Toolbar,\n    Typography,\n    Breadcrumbs,\n    Link,\n    Icon,\n} from \"@material-ui/core\";\nimport { Redirect, Route, Switch } from \"react-router\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { gql, useLazyQuery, useMutation } from \"@apollo/client\";\nimport { useConfirm } from \"material-ui-confirm\";\n\nimport CourseNavigation from \"./CourseNavigation\";\nimport CourseDetails from \"./CourseDetails\";\nimport CourseAudience from \"./CourseAudience\";\nimport CoursePricing from \"./CoursePricing\";\nimport CourseCurriculum from \"./CourseCurriculum\";\nimport CoursePromotions from \"./CoursePromotions\";\nimport ContentEditor from \"./ContentEditor\";\n\nconst useStyles = makeStyles((theme) => ({\n    suspense: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        minHeight: \"100vh\",\n        backgroundColor: theme.palette.background.default,\n        width: \"100%\",\n    },\n    root: {\n        minHeight: \"100vh\",\n        backgroundColor: theme.palette.background.default,\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"flex-start\",\n    },\n    top: {},\n    bottom: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        padding: theme.spacing(4),\n    },\n    content: {},\n    title: {\n        fontWeight: \"bold\",\n        fontSize: 20,\n    },\n    description: {\n        marginTop: theme.spacing(2),\n        fontWeight: 400,\n    },\n    toolbar: {\n        backgroundColor: (theme.palette.background as any).level2,\n    },\n    toolbarContent: {\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n    },\n    toolbarActions: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    action: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        marginLeft: theme.spacing(1),\n    },\n    actionIcon: {\n        marginRight: theme.spacing(1),\n    },\n    toolbarTitle: {\n        fontWeight: \"bold\",\n        fontSize: 20,\n        maxWidth: 800,\n    },\n    link: {\n        cursor: \"pointer\",\n    },\n    navigation: {\n        width: 260,\n    },\n    container: {\n        flexGrow: 1,\n        paddingLeft: theme.spacing(5),\n        paddingRight: theme.spacing(5),\n    },\n}));\n\ninterface Params {\n    id: string;\n}\n\nconst GET_COURSE = gql`\n    query GetCourse($courseId: ID!) {\n        getCourseById(courseId: $courseId) {\n            id\n            title\n            description\n            level\n            languageCode\n            status\n            objectives\n            requirements\n            targets\n            resources\n            actualPrice\n            discountedPrice\n            chapters {\n                id\n                title\n                sections {\n                    id\n                    type\n                    title\n                }\n            }\n        }\n    }\n`;\n\nconst CREATE_EMPTY_COURSE = gql`\n    mutation CreateEmptyCourse {\n        createCourse {\n            id\n        }\n    }\n`;\n\nconst UPDATE_COURSE_DETAILS = gql`\n    mutation UpdateCourse(\n        $courseId: ID!\n        $title: String\n        $description: String\n        $level: CourseLevel\n        $imageURL: String\n        $languageCode: Language\n        $linear: Boolean\n        $actualPrice: Float\n        $discountedPrice: Float\n        $requirements: String\n        $objectives: String\n        $targets: String\n        $resources: String\n        $chapters: [String!]\n    ) {\n        updateCourse(\n            courseId: $courseId\n            title: $title\n            description: $description\n            level: $level\n            imageURL: $imageURL\n            languageCode: $languageCode\n            linear: $linear\n            actualPrice: $actualPrice\n            discountedPrice: $discountedPrice\n            requirements: $requirements\n            objectives: $objectives\n            targets: $targets\n            chapters: $chapters\n            resources: $resources\n        ) {\n            id\n            title\n            description\n            level\n            imageURL\n            languageCode\n            linear\n            actualPrice\n            discountedPrice\n            requirements\n            objectives\n            targets\n            chapters {\n                id\n            }\n            resources\n        }\n    }\n`;\n\nconst PUBLISH_COURSE = gql`\n    mutation PublishCourse($courseId: ID!) {\n        publishCourse(courseId: $courseId) {\n            status\n        }\n    }\n`;\n\nconst DELETE_COURSE = gql`\n    mutation DeleteCourse($courseId: ID!) {\n        deleteCourse(courseId: $courseId)\n    }\n`;\n\nconst UNPUBLISH_COURSE = gql`\n    mutation UnpublishCourse($courseId: ID!) {\n        unpublishCourse(courseId: $courseId) {\n            status\n        }\n    }\n`;\n\nconst CREATE_CHAPTER = gql`\n    mutation CreateChapter(\n        $title: String\n        $courseId: String!\n        $description: String\n        $sections: [String!]\n    ) {\n        createChapter(\n            title: $title\n            course: $courseId\n            description: $description\n            sections: $sections\n        ) {\n            id\n        }\n    }\n`;\n\nconst UPDATE_CHAPTER = gql`\n    mutation UpdateChapter(\n        $chapterId: ID!\n        $title: String\n        $description: String\n        $sections: [String!]\n    ) {\n        updateChapter(\n            chapterId: $chapterId\n            title: $title\n            description: $description\n            sections: $sections\n        ) {\n            id\n        }\n    }\n`;\n\nconst DELETE_CHAPTER = gql`\n    mutation DeleteChapter($chapterId: ID!) {\n        deleteChapter(chapterId: $chapterId)\n    }\n`;\n\nconst CREATE_SECTION = gql`\n    mutation CreateSection(\n        $chapterId: ID!\n        $title: String\n        $type: SectionType!\n        $description: String\n    ) {\n        createSection(\n            chapter: $chapterId\n            title: $title\n            type: $type\n            description: $description\n        ) {\n            id\n        }\n    }\n`;\n\nconst DELETE_SECTION = gql`\n    mutation DeleteSection($sectionId: ID!) {\n        deleteSection(sectionId: $sectionId)\n    }\n`;\n\nconst CourseEditor: FunctionComponent = () => {\n    const params = useParams<Params>();\n    const history = useHistory();\n    const classes = useStyles();\n    const [\n        getCourse,\n        { loading: fetching, error: currentError, data: currentCourseData },\n    ] = useLazyQuery(GET_COURSE);\n    // TODO: Courses must be updated!\n    const [\n        createEmptyCourse,\n        { loading: creating, error: newError, data: newCourse },\n    ] = useMutation(CREATE_EMPTY_COURSE);\n    const [updateCourse, { loading: updating, error: updateError }] =\n        useMutation(UPDATE_COURSE_DETAILS, {\n            refetchQueries: [GET_COURSE],\n        });\n    const [publishCourse, { loading: publishing, error: publishError }] =\n        useMutation(PUBLISH_COURSE, {\n            refetchQueries: [GET_COURSE],\n        });\n    const [unpublishCourse, { loading: unpublishing, error: unpublishError }] =\n        useMutation(UNPUBLISH_COURSE, {\n            refetchQueries: [GET_COURSE],\n        });\n    const [deleteCourse, { loading: deleting, error: deleteError }] =\n        useMutation(DELETE_COURSE);\n    const [\n        createChapter,\n        { loading: creatingChapter, error: createChapterError },\n    ] = useMutation(CREATE_CHAPTER, {\n        refetchQueries: [GET_COURSE],\n    });\n    const [\n        updateChapter,\n        { loading: updatingChapter, error: updateChapterError },\n    ] = useMutation(UPDATE_CHAPTER, {\n        refetchQueries: [GET_COURSE],\n    });\n    const [\n        deleteChapter,\n        { loading: deletingChapter, error: deleteChapterError },\n    ] = useMutation(DELETE_CHAPTER, { refetchQueries: [GET_COURSE] });\n    const [\n        createSection,\n        { loading: creatingSection, error: createSectionError },\n    ] = useMutation(CREATE_SECTION, {\n        refetchQueries: [GET_COURSE],\n    });\n    const [\n        deleteSection,\n        { loading: deletingSection, error: deleteSectionError },\n    ] = useMutation(DELETE_SECTION, { refetchQueries: [GET_COURSE] });\n    const currentCourse = useMemo(\n        () =>\n            currentCourseData?.getCourseById || {\n                requirements: [],\n                objectives: [],\n                targets: [],\n                resources: [],\n                chapters: [],\n            },\n        [currentCourseData?.getCourseById],\n    );\n    const confirm = useConfirm();\n\n    const previousCreating = useRef<boolean>(false);\n    // const { chapter, section } = useMemo(() => {\n    //     const match = matchPath<{\n    //         courseId: string;\n    //         chapterId: string;\n    //         sectionId: string;\n    //     }>(location.pathname, {\n    //         path: \"/courses/:courseId/chapters/:chapterId/sections/:sectionId/edit\",\n    //         exact: true,\n    //         strict: false,\n    //     });\n    //     if (match) {\n    //         const { courseId, chapterId, sectionId } = match.params;\n\n    //         return { chapter: selectedChapter, section: selectedSection };\n    //     }\n    //     return { chapter: null, section: null };\n    // }, [current?.chapters, location.pathname]);\n\n    useEffect(() => {\n        if (params.id === \"new\" && !previousCreating.current && !creating) {\n            createEmptyCourse();\n        }\n\n        if (params.id !== \"new\" && currentCourse?.id !== params.id) {\n            getCourse({ variables: { courseId: params.id } });\n        }\n\n        if (previousCreating.current && !creating) {\n            history.push(`/courses/${newCourse?.createCourse?.id}/details`);\n        }\n\n        previousCreating.current = creating;\n    }, [\n        createEmptyCourse,\n        creating,\n        currentCourse,\n        currentCourse?.id,\n        getCourse,\n        history,\n        params.id,\n        newCourse?.createCourse?.id,\n    ]);\n\n    const handleOpenCourses = useCallback(() => {\n        history.push(\"/courses\");\n    }, [history]);\n\n    const handleOpenCourse = useCallback(() => {\n        history.push(`/courses/${currentCourse?.id}/curriculum`);\n    }, [currentCourse?.id, history]);\n\n    const handlePublishCourse = useCallback(() => {\n        (currentCourse?.status === \"public\" ? unpublishCourse : publishCourse)({\n            variables: { courseId: currentCourse?.id },\n        });\n    }, [currentCourse, publishCourse, unpublishCourse]);\n\n    const handleDeleteCourse = useCallback(() => {\n        confirm({\n            title: \"Are you sure you want to delete the course?\",\n            description: `You cannot restore it once you delete. This action will permanently delete \"${currentCourse?.title || \"<anonymous chapter>\"}\", including its chapters.`,\n            confirmationText: \"Yes, I understand. Delete anyway.\",\n            confirmationButtonProps: {\n                color: \"secondary\",\n                variant: \"contained\",\n            },\n        }).then(() => {\n            deleteCourse({\n                variables: { courseId: currentCourse.id },\n            });\n            history.push(\"/courses\");\n        });\n    }, [confirm, currentCourse.id, currentCourse?.title, deleteCourse, history]);\n\n    const handleUpdateCourse = useCallback(\n        (updates: any) => {\n            updateCourse({\n                variables: updates,\n            });\n        },\n        [updateCourse],\n    );\n\n    const handleCreateChapter = useCallback(\n        (chapter: any) => {\n            createChapter({\n                variables: chapter,\n            });\n        },\n        [createChapter],\n    );\n\n    const handleUpdateChapter = useCallback(\n        (chapter: any) => {\n            updateChapter({\n                variables: chapter,\n            });\n        },\n        [updateChapter],\n    );\n\n    const handleDeleteChapter = useCallback(\n        (chapterId: string) => {\n            deleteChapter({\n                variables: {\n                    chapterId,\n                },\n            });\n        },\n        [deleteChapter],\n    );\n\n    const handleCreateSection = useCallback(\n        (section: any) => {\n            createSection({\n                variables: section,\n            });\n        },\n        [createSection],\n    );\n\n    const handleDeleteSection = useCallback(\n        (chapterId: string, sectionId: string) => {\n            deleteSection({\n                variables: {\n                    sectionId,\n                },\n            });\n        },\n        [deleteSection],\n    );\n\n    // TODO: prevent reordering while saving!\n\n    if (params.id === \"new\" || creating || !currentCourse || fetching) {\n        return (\n            <div className={classes.suspense}>\n                <CircularProgress size=\"48px\" />\n            </div>\n        );\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.top}>\n                <AppBar position=\"sticky\">\n                    <Toolbar className={classes.toolbar}>\n                        <div className={classes.toolbarContent}>\n                            <Breadcrumbs separator=\"›\">\n                                <Link\n                                    color=\"inherit\"\n                                    onClick={handleOpenCourses}\n                                    className={classes.link}>\n                                    Courses\n                                </Link>\n\n                                {!currentCourse?.title && (\n                                    <Typography color=\"textPrimary\">\n                                        New Course\n                                    </Typography>\n                                )}\n\n                                {currentCourse?.title && (\n                                    <Link\n                                        color=\"inherit\"\n                                        onClick={handleOpenCourse}\n                                        className={classes.link}>\n                                        {currentCourse?.title}\n                                    </Link>\n                                )}\n                                {/* \n                                {chapter && (\n                                    <Typography color=\"textPrimary\">\n                                        {chapter?.title ?? \"<impossible>\"}\n                                    </Typography>\n                                )}\n                                {section && (\n                                    <Typography color=\"textPrimary\">\n                                        {section?.title ?? \"<impossible>\"}\n                                    </Typography>\n                                )} */}\n                            </Breadcrumbs>\n                            <div className={classes.toolbarActions}>\n                                <Button\n                                    color=\"inherit\"\n                                    onClick={handlePublishCourse}\n                                    className={classes.action}>\n                                    <Icon\n                                        className={classes.actionIcon}\n                                        fontSize=\"small\">\n                                        publish\n                                    </Icon>\n                                    {currentCourse?.status === \"public\"\n                                        ? \"Unpublish\"\n                                        : \"Publish\"}\n                                </Button>\n                                <Button\n                                    color=\"inherit\"\n                                    onClick={handleDeleteCourse}\n                                    className={classes.action}>\n                                    <Icon\n                                        className={classes.actionIcon}\n                                        fontSize=\"small\">\n                                        delete\n                                    </Icon>\n                                    Delete\n                                </Button>\n                            </div>\n                        </div>\n                    </Toolbar>\n                </AppBar>\n            </div>\n            <div className={classes.bottom}>\n                <div className={classes.navigation}>\n                    <CourseNavigation id={currentCourse.id} />\n                </div>\n                <div className={classes.container}>\n                    <Switch>\n                        <Route exact={true} path=\"/courses/:id/details\">\n                            <CourseDetails\n                                {...currentCourse}\n                                updating={false}\n                                onUpdate={handleUpdateCourse}\n                            />\n                        </Route>\n                        <Route exact={true} path=\"/courses/:id/audience\">\n                            <CourseAudience\n                                {...currentCourse}\n                                updating={false}\n                                onUpdate={handleUpdateCourse}\n                            />\n                        </Route>\n                        <Route exact={true} path=\"/courses/:id/pricing\">\n                            <CoursePricing\n                                {...currentCourse}\n                                updating={false}\n                                onUpdate={handleUpdateCourse}\n                            />\n                        </Route>\n                        <Route exact={true} path=\"/courses/:id/curriculum\">\n                            <CourseCurriculum\n                                {...currentCourse}\n                                courseId={currentCourse.id}\n                                onUpdateChapter={handleUpdateChapter}\n                                onCreateChapter={handleCreateChapter}\n                                onDeleteChapter={handleDeleteChapter}\n                                onCreateSection={handleCreateSection}\n                                onDeleteSection={handleDeleteSection}\n                            />\n                        </Route>\n                        <Route exact={true} path=\"/courses/:id/promotions\">\n                            <CoursePromotions />\n                        </Route>\n                        <Route\n                            exact={true}\n                            path=\"/courses/:courseId/chapters/:chapterId/sections/:sectionId/edit\">\n                            <ContentEditor />\n                        </Route>\n                        <Redirect to={`/courses/${params.id}/details`} />\n                    </Switch>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CourseEditor;\n"],"sourceRoot":""}