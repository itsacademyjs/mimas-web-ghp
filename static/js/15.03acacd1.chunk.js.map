{"version":3,"sources":["workspace/common/FormsyTextField.js","workspace/article/ArticleEditor.tsx"],"names":["withFormsy","props","errorMessage","value","onChange","event","setValue","currentTarget","error","Boolean","helperText","useStyles","makeStyles","theme","root","display","flexDirection","justifyContent","width","minHeight","backgroundColor","palette","background","default","toolbar","level2","toolbarContainer","alignItems","link","cursor","editor","padding","spacing","title","imageURL","marginTop","description","content","contentTextArea","resize","actions","action","actionIcon","marginRight","progress","CREATE_EMPTY_ARTICLE","gql","GET_ARTICLE","UPDATE_ARTICLE","PUBLISH_ARTICLE","UNPUBLISH_ARTICLE","ArticleEditor","classes","params","useParams","useLazyQuery","variables","articleId","getArticle","currentArticleData","loading","data","useMutation","createEmptyArticle","creating","newArticle","refetchQueries","updateArticle","updating","publishArticle","unpublishArticle","history","useHistory","useState","setTitle","setContent","setImageURL","setDescription","valid","setValid","previousCreating","useRef","currentArticle","useMemo","getArticleById","changesMade","useEffect","id","current","push","createArticle","handleContentChange","useCallback","target","handleTitleChange","handleImageURLChange","handleDescriptionChange","handleValidForm","handleInvalidForm","handleOpenArticles","handlePublishArticle","status","handleSave","className","separator","color","onClick","fontSize","disabled","size","onValid","onInvalid","name","label","validations","minLength","maxLength","validationErrors","variant","required","fullWidth","multiline","rows","matchRegexp","inputProps"],"mappings":"2JA0BeA,iBAtBf,SAAyBC,GAAQ,IACrBC,EAAiBD,EAAjBC,aACFC,EAAQF,EAAME,OAAS,GAS7B,OACI,cAAC,IAAD,2BACQF,GADR,IAEIG,SAVY,SAACC,GACjBJ,EAAMK,SAASD,EAAME,cAAcJ,OAC/BF,EAAMG,UACNH,EAAMG,SAASC,IAQfF,MAAOA,EACPK,MAAOC,QAAQP,GACfQ,WAAYR,S,4MCElBS,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,QAAS,OACTC,cAAe,SACfC,eAAgB,aAChBC,MAAO,OACPC,UAAW,QACXC,gBAAiBP,EAAMQ,QAAQC,WAAWC,SAE9CC,QAAS,CACLJ,gBAAkBP,EAAMQ,QAAQC,WAAmBG,OACnDP,MAAO,QAEXQ,iBAAkB,CACdX,QAAS,OACTC,cAAe,MACfC,eAAgB,gBAChBU,WAAY,SACZT,MAAO,QAEXU,KAAM,CACFC,OAAQ,WAEZC,OAAQ,CACJf,QAAS,OACTC,cAAe,SACfe,QAASlB,EAAMmB,QAAQ,IAE3BC,MAAO,GACPC,SAAU,CACNC,UAAWtB,EAAMmB,QAAQ,IAE7BI,YAAa,CACTD,UAAWtB,EAAMmB,QAAQ,IAE7BK,QAAS,CACLF,UAAWtB,EAAMmB,QAAQ,IAE7BM,gBAAiB,CACbC,OAAQ,WACRpB,UAAW,IACXD,MAAO,QAEXsB,QAAS,CACLtB,MAAO,OACPH,QAAS,OACTE,eAAgB,WAChBD,cAAe,MACfW,WAAY,UAEhBc,OAAQ,GACRC,WAAY,CACRC,YAAa9B,EAAMmB,QAAQ,IAE/BY,SAAU,CACND,YAAa9B,EAAMmB,QAAQ,QAQ7Ba,EAAuBC,YAAH,0HAQpBC,EAAcD,YAAH,mQAaXE,EAAiBF,YAAH,kbAoBdG,EAAkBH,YAAH,mKAQfI,EAAoBJ,YAAH,uKAQAA,YAAH,gIAuRLK,UAjR0B,WAAO,IAAD,EACrCC,EAAUzC,IACV0C,EAASC,cAF4B,EAMvCC,YAAaR,EAAa,CAC1BS,UAAW,CAAEC,UAAWJ,EAAOI,aAPQ,mBAIvCC,EAJuC,YAKOC,GALP,EAKrCC,QALqC,EAKlBpD,MALkB,EAKCqD,MALD,EAavCC,YAAYjB,GAb2B,mBAWvCkB,EAXuC,YAY5BC,EAZ4B,EAYrCJ,QAA0CK,GAZL,EAYlBzD,MAZkB,EAYDqD,MAZC,EAevCC,YAAYd,EAAgB,CACxBkB,eAAgB,CAACnB,KAhBkB,mBAcpCoB,EAdoC,YAcVC,EAdU,EAcnBR,QAdmB,KAcApD,MAMvCsD,YAAYb,EAAiB,CACzBiB,eAAgB,CAACnB,MArBkB,mBAmBpCsB,EAnBoC,iBAmBlBT,QAnBkB,EAmBGpD,MAK1CsD,YAAYZ,EAAmB,CAC3BgB,eAAgB,CAACnB,MAzBkB,mBAuBpCuB,EAvBoC,YA2BrCC,GA3BqC,EAuBhBX,QAvBgB,EAuBOpD,MAIlCgE,eA3B2B,EA6BjBC,mBAAS,IA7BQ,mBA6BpCxC,EA7BoC,KA6B7ByC,EA7B6B,OA8BbD,mBAAS,IA9BI,mBA8BpCpC,GA9BoC,KA8B3BsC,GA9B2B,QA+BXF,mBAAS,IA/BE,qBA+BpCvC,GA/BoC,MA+B1B0C,GA/B0B,SAgCLH,mBAAS,IAhCJ,qBAgCpCrC,GAhCoC,MAgCvByC,GAhCuB,SAiCjBJ,oBAAS,GAjCQ,qBAiCpCK,GAjCoC,MAiC7BC,GAjC6B,MAkCrCC,GAAmBC,kBAAgB,GAEnCC,GAAiBC,mBACnB,kBAAwB,OAAlBxB,QAAkB,IAAlBA,OAAA,EAAAA,EAAoByB,iBAAkB,KAC5C,QAACzB,QAAD,IAACA,OAAD,EAACA,EAAoByB,iBAGnBC,IACY,OAAdH,SAAc,IAAdA,QAAA,EAAAA,GAAgBjD,SAAUA,IACZ,OAAdiD,SAAc,IAAdA,QAAA,EAAAA,GAAgB7C,WAAYA,KACd,OAAd6C,SAAc,IAAdA,QAAA,EAAAA,GAAgBhD,YAAaA,KACf,OAAdgD,SAAc,IAAdA,QAAA,EAAAA,GAAgB9C,eAAgBA,GAEpCkD,qBAAU,WASsC,IAAD,GARzB,QAAdjC,EAAOkC,IAAiBP,GAAiBQ,SAAYxB,GACrDD,IAGc,QAAdV,EAAOkC,KAA8B,OAAdL,SAAc,IAAdA,QAAA,EAAAA,GAAgBK,MAAOlC,EAAOkC,IACrD7B,EAAW,CAAEF,UAAW,CAAEC,UAAWJ,EAAOkC,MAG5CP,GAAiBQ,UAAYxB,IAC7BO,EAAQkB,KAAR,2BAA0BxB,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAYyB,qBAAtC,aAA0B,EAA2BH,GAArD,UAGJP,GAAiBQ,QAAUxB,IAC5B,CACCD,EACAC,EAFD,OAGCkB,SAHD,IAGCA,QAHD,EAGCA,GAAgBK,GAChB7B,EACAa,EALD,OAMCN,QAND,IAMCA,GAND,UAMCA,EAAYyB,qBANb,aAMC,EAA2BH,GAC3BlC,EAAOkC,KAGXD,qBAAU,WACF3B,IACAe,EAAQ,OAACQ,SAAD,IAACA,QAAD,EAACA,GAAgBjD,OACzB2C,GAAW,OAACM,SAAD,IAACA,QAAD,EAACA,GAAgBhD,UAC5B2C,GAAc,OAACK,SAAD,IAACA,QAAD,EAACA,GAAgB9C,aAC/BuC,GAAU,OAACO,SAAD,IAACA,QAAD,EAACA,GAAgB7C,YAEhC,QACC6C,SADD,IACCA,QADD,EACCA,GAAgBjD,MADjB,OAECiD,SAFD,IAECA,QAFD,EAECA,GAAgBhD,SAFjB,OAGCgD,SAHD,IAGCA,QAHD,EAGCA,GAAgB9C,YAHjB,OAIC8C,SAJD,IAICA,QAJD,EAICA,GAAgB7C,QAChBsB,IAGJ,IAAMgC,GAAsBC,uBAAY,SAACvF,GACrCsE,GAAWtE,EAAMwF,OAAO1F,SACzB,IAEG2F,GAAoBF,uBAAY,SAACvF,GACnCqE,EAASrE,EAAMwF,OAAO1F,SACvB,IAEG4F,GAAuBH,uBAAY,SAACvF,GACtCuE,GAAYvE,EAAMwF,OAAO1F,SAC1B,IAEG6F,GAA0BJ,uBAAY,SAACvF,GACzCwE,GAAexE,EAAMwF,OAAO1F,SAC7B,IAEG8F,GAAkBL,uBAAY,WAChCb,IAAS,KACV,IAEGmB,GAAoBN,uBAAY,WAClCb,IAAS,KACV,IAEGoB,GAAqBP,uBAAY,WACnCrB,EAAQkB,KAAK,eACd,CAAClB,IAEE6B,GAAuBR,uBAAY,YACT,YAAb,OAAdV,SAAc,IAAdA,QAAA,EAAAA,GAAgBmB,QACX/B,EACAD,GAAgB,CAClBb,UAAW,CAAEC,UAAS,OAAEyB,SAAF,IAAEA,QAAF,EAAEA,GAAgBK,QAE7C,CAACL,GAAgBb,EAAgBC,IAE9BgC,GAAaV,uBAAY,WAC3BzB,EAAc,CACVX,UAAW,CACPC,UAAS,OAAEyB,SAAF,IAAEA,QAAF,EAAEA,GAAgBK,GAC3BtD,QACAC,YACAE,eACAC,gBAGT,CACCA,GADD,OAEC6C,SAFD,IAECA,QAFD,EAECA,GAAgBK,GAChBnD,GACAH,EACAC,GACAiC,IAGJ,OACI,sBAAKoC,UAAWnD,EAAQtC,KAAxB,UACI,cAAC,IAAD,CAASyF,UAAWnD,EAAQ5B,QAA5B,SACI,sBAAK+E,UAAWnD,EAAQ1B,iBAAxB,UACI,cAAC,IAAD,CAAa8E,UAAU,SAAvB,SACI,cAAC,IAAD,CACIC,MAAM,UACNC,QAASP,GACTI,UAAWnD,EAAQxB,KAHvB,wBAOJ,sBAAK2E,UAAWnD,EAAQZ,QAAxB,UACI,eAAC,IAAD,CACIkE,QAASN,GACTG,UAAWnD,EAAQX,OAFvB,UAGI,cAAC,IAAD,CACI8D,UAAWnD,EAAQV,WACnBiE,SAAS,QAFb,qBAK4B,YAAb,OAAdzB,SAAc,IAAdA,QAAA,EAAAA,GAAgBmB,QACX,YACA,aAEV,eAAC,IAAD,CACIK,QAASJ,GACTC,UAAWnD,EAAQX,OACnBmE,UAAWvB,KAAgBP,IAASV,EAHxC,UAIKA,GACG,cAAC,IAAD,CACIyC,KAAK,OACLJ,MAAM,UACNF,UAAWnD,EAAQR,YAGzBwB,GACE,cAAC,IAAD,CAAMmC,UAAWnD,EAAQV,WAAzB,kBAZR,kBAmBZ,qBAAK6D,UAAWnD,EAAQtB,OAAxB,SACI,eAAC,IAAD,CAAQgF,QAASb,GAAiBc,UAAWb,GAA7C,UACI,cAAC,IAAD,CACIc,KAAK,QACLT,UAAWnD,EAAQnB,MACnBgF,MAAM,QACNC,YAAa,CACTC,UAAW,EACXC,UAAW,KAEfC,iBAAkB,CACdF,UAAW,yCACXC,UAAW,0CAEfE,QAAQ,WACRT,KAAK,SACL1G,MAAO8B,EACP7B,SAAU0F,GACVyB,UAAU,EACVC,WAAW,IAGf,cAAC,IAAD,CACIR,KAAK,cACLT,UAAWnD,EAAQhB,YACnB6E,MAAM,cACNC,YAAa,CACTE,UAAW,MAEfC,iBAAkB,CACdD,UACI,yDAERE,QAAQ,WACRT,KAAK,SACL1G,MAAOiC,GACPhC,SAAU4F,GACVwB,WAAW,EACXC,WAAW,EACXC,KAAM,IAGV,cAAC,IAAD,CACIV,KAAK,WACLT,UAAWnD,EAAQlB,SACnB+E,MAAM,YACNC,YAAa,CACTS,YACI,yGAERN,iBAAkB,CACdM,YACI,yCAERL,QAAQ,WACRT,KAAK,SACL1G,MAAO+B,GACP9B,SAAU2F,GACVyB,WAAW,IAGf,cAAC,IAAD,CACIR,KAAK,UACLT,UAAWnD,EAAQf,QACnB4E,MAAM,UACNC,YAAa,CACTE,UAAW,OAEfC,iBAAkB,CACdD,UACI,8DAERE,QAAQ,WACRT,KAAK,SACL1G,MAAOkC,GACPjC,SAAUuF,GACV6B,WAAW,EACXC,WAAW,EACXG,WAAY,CACRrB,UAAWnD,EAAQd","file":"static/js/15.03acacd1.chunk.js","sourcesContent":["import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport { withFormsy } from \"formsy-react\";\n\nfunction FormsyTextField(props) {\n    const { errorMessage } = props;\n    const value = props.value || \"\";\n\n    const changeValue = (event) => {\n        props.setValue(event.currentTarget.value);\n        if (props.onChange) {\n            props.onChange(event);\n        }\n    };\n\n    return (\n        <TextField\n            {...props}\n            onChange={changeValue}\n            value={value}\n            error={Boolean(errorMessage)}\n            helperText={errorMessage}\n        />\n    );\n}\n\nexport default withFormsy(FormsyTextField);\n","import {\n    FunctionComponent,\n    useState,\n    useCallback,\n    useEffect,\n    useRef,\n    useMemo,\n} from \"react\";\nimport {\n    Button,\n    CircularProgress,\n    Icon,\n    Toolbar,\n    Breadcrumbs,\n    Link,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Formsy from \"formsy-react\";\nimport { useParams, useHistory } from \"react-router\";\nimport { gql, useLazyQuery, useMutation } from \"@apollo/client\";\n\nimport TextField from \"../common/FormsyTextField\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"flex-start\",\n        width: \"100%\",\n        minHeight: \"100vh\",\n        backgroundColor: theme.palette.background.default,\n    },\n    toolbar: {\n        backgroundColor: (theme.palette.background as any).level2,\n        width: \"100%\",\n    },\n    toolbarContainer: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        width: \"100%\",\n    },\n    link: {\n        cursor: \"pointer\",\n    },\n    editor: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        padding: theme.spacing(4),\n    },\n    title: {},\n    imageURL: {\n        marginTop: theme.spacing(2),\n    },\n    description: {\n        marginTop: theme.spacing(2),\n    },\n    content: {\n        marginTop: theme.spacing(2),\n    },\n    contentTextArea: {\n        resize: \"vertical\",\n        minHeight: 400,\n        width: \"100%\",\n    },\n    actions: {\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n    },\n    action: {},\n    actionIcon: {\n        marginRight: theme.spacing(1),\n    },\n    progress: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\ninterface Params {\n    id: string;\n}\n\nconst CREATE_EMPTY_ARTICLE = gql`\n    mutation CreateEmptyArticle {\n        createArticle {\n            id\n        }\n    }\n`;\n\nconst GET_ARTICLE = gql`\n    query GetArticle($articleId: ID!) {\n        getArticleById(articleId: $articleId) {\n            id\n            title\n            imageURL\n            description\n            content\n            status\n        }\n    }\n`;\n\nconst UPDATE_ARTICLE = gql`\n    mutation UpdateArticle(\n        $articleId: ID!\n        $title: String\n        $description: String\n        $content: String\n        $imageURL: String\n    ) {\n        updateArticle(\n            articleId: $articleId\n            title: $title\n            description: $description\n            content: $content\n            imageURL: $imageURL\n        ) {\n            id\n        }\n    }\n`;\n\nconst PUBLISH_ARTICLE = gql`\n    mutation PublishArticle($articleId: ID!) {\n        publishArticle(articleId: $articleId) {\n            status\n        }\n    }\n`;\n\nconst UNPUBLISH_ARTICLE = gql`\n    mutation UnpublishArticle($articleId: ID!) {\n        unpublishArticle(articleId: $articleId) {\n            status\n        }\n    }\n`;\n\nconst DELETE_ARTICLE = gql`\n    mutation DeleteArticle($articleId: ID!) {\n        deleteArticle(articleId: $articleId)\n    }\n`;\n\nconst ArticleEditor: FunctionComponent = () => {\n    const classes = useStyles();\n    const params = useParams<Params>();\n    const [\n        getArticle,\n        { loading: fetching, error: fetchError, data: currentArticleData },\n    ] = useLazyQuery(GET_ARTICLE, {\n        variables: { articleId: params.articleId },\n    });\n\n    const [\n        createEmptyArticle,\n        { loading: creating, error: newError, data: newArticle },\n    ] = useMutation(CREATE_EMPTY_ARTICLE);\n    const [updateArticle, { loading: updating, error: updateError }] =\n        useMutation(UPDATE_ARTICLE, {\n            refetchQueries: [GET_ARTICLE],\n        });\n\n    const [publishArticle, { loading: publishing, error: publishError }] =\n        useMutation(PUBLISH_ARTICLE, {\n            refetchQueries: [GET_ARTICLE],\n        });\n    const [unpublishArticle, { loading: unpublishing, error: unpublishError }] =\n        useMutation(UNPUBLISH_ARTICLE, {\n            refetchQueries: [GET_ARTICLE],\n        });\n    const history = useHistory();\n\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [imageURL, setImageURL] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [valid, setValid] = useState(false);\n    const previousCreating = useRef<boolean>(false);\n\n    const currentArticle = useMemo(\n        () => currentArticleData?.getArticleById || {},\n        [currentArticleData?.getArticleById],\n    );\n\n    const changesMade =\n        currentArticle?.title !== title ||\n        currentArticle?.content !== content ||\n        currentArticle?.imageURL !== imageURL ||\n        currentArticle?.description !== description;\n\n    useEffect(() => {\n        if (params.id === \"new\" && !previousCreating.current && !creating) {\n            createEmptyArticle();\n        }\n\n        if (params.id !== \"new\" && currentArticle?.id !== params.id) {\n            getArticle({ variables: { articleId: params.id } });\n        }\n\n        if (previousCreating.current && !creating) {\n            history.push(`/articles/${newArticle?.createArticle?.id}/edit`);\n        }\n\n        previousCreating.current = creating;\n    }, [\n        createEmptyArticle,\n        creating,\n        currentArticle?.id,\n        getArticle,\n        history,\n        newArticle?.createArticle?.id,\n        params.id,\n    ]);\n\n    useEffect(() => {\n        if (currentArticleData) {\n            setTitle(currentArticle?.title);\n            setImageURL(currentArticle?.imageURL);\n            setDescription(currentArticle?.description);\n            setContent(currentArticle?.content);\n        }\n    }, [\n        currentArticle?.title,\n        currentArticle?.imageURL,\n        currentArticle?.description,\n        currentArticle?.content,\n        currentArticleData,\n    ]);\n\n    const handleContentChange = useCallback((event) => {\n        setContent(event.target.value);\n    }, []);\n\n    const handleTitleChange = useCallback((event) => {\n        setTitle(event.target.value);\n    }, []);\n\n    const handleImageURLChange = useCallback((event) => {\n        setImageURL(event.target.value);\n    }, []);\n\n    const handleDescriptionChange = useCallback((event) => {\n        setDescription(event.target.value);\n    }, []);\n\n    const handleValidForm = useCallback(() => {\n        setValid(true);\n    }, []);\n\n    const handleInvalidForm = useCallback(() => {\n        setValid(false);\n    }, []);\n\n    const handleOpenArticles = useCallback(() => {\n        history.push(\"/articles\");\n    }, [history]);\n\n    const handlePublishArticle = useCallback(() => {\n        (currentArticle?.status === \"public\"\n            ? unpublishArticle\n            : publishArticle)({\n            variables: { articleId: currentArticle?.id },\n        });\n    }, [currentArticle, publishArticle, unpublishArticle]);\n\n    const handleSave = useCallback(() => {\n        updateArticle({\n            variables: {\n                articleId: currentArticle?.id,\n                title,\n                imageURL,\n                description,\n                content,\n            },\n        });\n    }, [\n        content,\n        currentArticle?.id,\n        description,\n        title,\n        imageURL,\n        updateArticle,\n    ]);\n\n    return (\n        <div className={classes.root}>\n            <Toolbar className={classes.toolbar}>\n                <div className={classes.toolbarContainer}>\n                    <Breadcrumbs separator=\"›\">\n                        <Link\n                            color=\"inherit\"\n                            onClick={handleOpenArticles}\n                            className={classes.link}>\n                            Articles\n                        </Link>\n                    </Breadcrumbs>\n                    <div className={classes.actions}>\n                        <Button\n                            onClick={handlePublishArticle}\n                            className={classes.action}>\n                            <Icon\n                                className={classes.actionIcon}\n                                fontSize=\"small\">\n                                publish\n                            </Icon>\n                            {currentArticle?.status === \"public\"\n                                ? \"Unpublish\"\n                                : \"Publish\"}\n                        </Button>\n                        <Button\n                            onClick={handleSave}\n                            className={classes.action}\n                            disabled={!changesMade || !valid || updating}>\n                            {updating && (\n                                <CircularProgress\n                                    size=\"16px\"\n                                    color=\"inherit\"\n                                    className={classes.progress}\n                                />\n                            )}\n                            {!updating && (\n                                <Icon className={classes.actionIcon}>save</Icon>\n                            )}\n                            Save\n                        </Button>\n                    </div>\n                </div>\n            </Toolbar>\n            <div className={classes.editor}>\n                <Formsy onValid={handleValidForm} onInvalid={handleInvalidForm}>\n                    <TextField\n                        name=\"title\"\n                        className={classes.title}\n                        label=\"Title\"\n                        validations={{\n                            minLength: 8,\n                            maxLength: 256,\n                        }}\n                        validationErrors={{\n                            minLength: \"The title should have 8-256 characters\",\n                            maxLength: \"The title should have 8-256 characters\",\n                        }}\n                        variant=\"outlined\"\n                        size=\"medium\"\n                        value={title}\n                        onChange={handleTitleChange}\n                        required={true}\n                        fullWidth={true}\n                    />\n\n                    <TextField\n                        name=\"description\"\n                        className={classes.description}\n                        label=\"Description\"\n                        validations={{\n                            maxLength: 1024,\n                        }}\n                        validationErrors={{\n                            maxLength:\n                                \"The description cannot be longer than 1024 characters\",\n                        }}\n                        variant=\"outlined\"\n                        size=\"medium\"\n                        value={description}\n                        onChange={handleDescriptionChange}\n                        fullWidth={true}\n                        multiline={true}\n                        rows={5}\n                    />\n\n                    <TextField\n                        name=\"imageURL\"\n                        className={classes.imageURL}\n                        label=\"Image URL\"\n                        validations={{\n                            matchRegexp:\n                                /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/,\n                        }}\n                        validationErrors={{\n                            matchRegexp:\n                                \"The URL you have entered is not valid\",\n                        }}\n                        variant=\"outlined\"\n                        size=\"medium\"\n                        value={imageURL}\n                        onChange={handleImageURLChange}\n                        fullWidth={true}\n                    />\n\n                    <TextField\n                        name=\"content\"\n                        className={classes.content}\n                        label=\"Content\"\n                        validations={{\n                            maxLength: 20480,\n                        }}\n                        validationErrors={{\n                            maxLength:\n                                \"The article content cannot be longer than 20480 characters\",\n                        }}\n                        variant=\"outlined\"\n                        size=\"medium\"\n                        value={content}\n                        onChange={handleContentChange}\n                        fullWidth={true}\n                        multiline={true}\n                        inputProps={{\n                            className: classes.contentTextArea,\n                        }}\n                    />\n                </Formsy>\n            </div>\n        </div>\n    );\n};\n\nexport default ArticleEditor;\n"],"sourceRoot":""}