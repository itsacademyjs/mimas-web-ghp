{"version":3,"sources":["hooks/useQuery.js","hooks/usePagination.tsx","hooks/useHover.ts","redux/hooks.ts","workspace/common/NoRecords.js","../../../../src/react/hooks/useQuery.ts","workspace/article/ViewArticle.tsx","workspace/article/ViewArticles.tsx"],"names":["useQuery","location","useLocation","params","URLSearchParams","search","result","entries","key","value","usePagination","query","history","useHistory","useState","parseInt","page","setPage","limit","rowsPerPage","setRowsPerPage","console","log","generateURL","useCallback","page0","params0","append","toString","push","pathname","useEffect","undefined","startDate","Date","Number","endDate","useHover","hover","setHover","onMouseEnter","onMouseLeave","useAppSelector","useSelector","useStyles","makeStyles","theme","container","display","alignItems","justifyContent","flexDirection","image","width","height","message","fontSize","fontWeight","color","palette","text","secondary","action","marginTop","NoRecords","props","classes","actionText","actionHandler","className","src","alt","variant","size","onClick","options","root","maxWidth","content","title","description","spacing","actions","paddingLeft","paddingRight","actionIcon","marginRight","ViewCourse","onEdit","Card","CardContent","Typography","CardActions","Button","Icon","minHeight","backgroundColor","background","default","toolbar","level2","toolbarContainer","link","cursor","articles","padding","progress","pagination","noRecords","GET_ARTICLES","gql","ViewArticles","variables","loading","error","data","refetch","firstName","state","session","payload","handlePageChange","event","newPage","window","scrollTo","handleEditArticle","id","handleNewArticle","handleOpenArticles","getArticles","records","totalPages","Toolbar","Breadcrumbs","separator","Link","CircularProgress","length","map","article","ViewArticle","Pagination","count","onChange","process"],"mappings":"yPAYeA,EAVE,WACb,IADmB,EACbC,EAAWC,cACXC,EAAS,IAAIC,gBAAgBH,EAASI,QACtCC,EAAS,GAHI,cAIQH,EAAOI,WAJf,IAInB,2BAA6C,CAAC,IAAD,yBAAjCC,EAAiC,KAA5BC,EAA4B,KACzCH,EAAOE,GAAOC,GALC,8BAOnB,OAAOH,GCoDII,EAvCO,WAClB,IAAMC,EAAQX,IACRY,EAAUC,cACVZ,EAAWC,cAHmB,EAIZY,mBAASC,SAASJ,EAAMK,KAAM,KAAO,GAJzB,mBAI7BA,EAJ6B,KAIvBC,EAJuB,OAKEH,mBAClCC,SAASJ,EAAMO,MAAO,KAxBA,IAkBU,mBAK7BC,EAL6B,KAKhBC,EALgB,KAQpCC,QAAQC,IAAIrB,GAEZ,IAAMsB,EAAcC,uBAChB,SAACC,EAAeP,GACZ,IAAMQ,EAAU,IAAItB,gBAAgBH,EAASI,QAE7CqB,EAAQC,OAAO,OAAQF,EAAMG,YAC7BF,EAAQC,OAAO,QAAST,EAAMU,YAE9BhB,EAAQiB,KAAR,UAAgB5B,EAAS6B,SAAzB,YAAqCJ,EAAQE,eAEjD,CAAChB,EAASX,EAAS6B,SAAU7B,EAASI,SAiB1C,OAdA0B,qBAAU,gBACaC,IAAfrB,EAAMK,WAAsCgB,IAAhBrB,EAAMO,OAClCK,EAAYP,EAAMG,KAEvB,CAACI,EAAaP,EAAML,EAAMK,KAAML,EAAMO,MAAOC,IAE5C,cAAeR,IACfA,EAAMsB,UAAY,IAAIC,KAAKC,OAAOxB,EAAMsB,aAGxC,YAAatB,IACbA,EAAMyB,QAAU,IAAIF,KAAKC,OAAOxB,EAAMyB,WAGnC,CAAEb,cAAaZ,QAAOK,OAAMC,UAASE,cAAaC,mBCpC9CiB,EAdE,WAAmB,IAAD,EACLvB,oBAAS,GADJ,mBACxBwB,EADwB,KACjBC,EADiB,KAW/B,MAAO,CAAED,QAAOE,aARKhB,uBAAY,WAC7Be,GAAS,KACV,IAM2BE,aAJTjB,uBAAY,WAC7Be,GAAS,KACV,O,iCCjBP,8CAOaG,EAAkDC,K,iCCP/D,uEAIMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,UAAW,CACTC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,cAAe,UAEjBC,MAAO,CACLC,MAAO,OACPC,OAAQ,KAEVC,QAAS,CACPC,SAAU,GACVC,WAAY,IACZC,MAAOZ,EAAMa,QAAQC,KAAKC,WAE5BC,OAAQ,CACNC,UAAW,QAIA,SAASC,EAAUC,GAChC,IAAMC,EAAUtB,IACRW,EAAsDU,EAAtDV,QAASY,EAA6CF,EAA7CE,WAAYC,EAAiCH,EAAjCG,cAAeN,EAAkBG,EAAlBH,OAAQV,EAAUa,EAAVb,MAEpD,OACE,sBAAKiB,UAAWH,EAAQnB,UAAxB,UACE,qBAAKsB,UAAWH,EAAQd,MAAOkB,IAAKlB,EAAOmB,IAAI,KAC/C,cAAC,IAAD,CAAYF,UAAWH,EAAQX,QAA/B,SAAyCA,IACxCO,GACC,cAAC,IAAD,CACEO,UAAWH,EAAQJ,OACnBU,QAAQ,YACRC,KAAK,QACLf,MAAM,YACNgB,QAASN,EALX,SAOGD,S,iCCrCX,+CAGM,SAAUnE,EACdW,EACAgE,GAEA,OAAO,YAAgChE,EAAOgE,GAAS,K,4NCAnD/B,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrC8B,KAAM,CACFC,SAAU,KAEdC,QAAS,GACTC,MAAO,CACHtB,WAAY,OACZD,SAAU,IAEdwB,YAAa,CACTjB,UAAWjB,EAAMmC,QAAQ,GACzBxB,WAAY,KAEhByB,QAAS,CACLlC,QAAS,OACTG,cAAe,MACfD,eAAgB,WAChBG,MAAO,QAEXS,OAAQ,CACJqB,YAAarC,EAAMmC,QAAQ,GAC3BG,aAActC,EAAMmC,QAAQ,IAEhCI,WAAY,CACRC,YAAaxC,EAAMmC,QAAQ,QAoCpBM,EAzB8B,SAACtB,GAC1C,IAAMC,EAAUtB,IACRmC,EAA+Bd,EAA/Bc,MAAOC,EAAwBf,EAAxBe,YAAaQ,EAAWvB,EAAXuB,OAC5B,OACI,eAACC,EAAA,EAAD,CAAMpB,UAAWH,EAAQU,KAAzB,UACI,eAACc,EAAA,EAAD,CAAarB,UAAWH,EAAQY,QAAhC,UACI,cAACa,EAAA,EAAD,CAAYtB,UAAWH,EAAQa,MAA/B,SACKA,GAAS,2BAEd,cAACY,EAAA,EAAD,CAAYtB,UAAWH,EAAQc,YAA/B,SACKA,GAAe,oCAGxB,cAACY,EAAA,EAAD,CAAavB,UAAWH,EAAQgB,QAAhC,SACI,eAACW,EAAA,EAAD,CAAQxB,UAAWH,EAAQJ,OAAQY,QAASc,EAA5C,UACI,cAACM,EAAA,EAAD,CAAMzB,UAAWH,EAAQmB,WAAY7B,SAAS,QAA9C,kBADJ,gB,SCxCVZ,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrC8B,KAAM,CACFvB,MAAO,OACP0C,UAAW,QACXC,gBAAiBlD,EAAMa,QAAQsC,WAAWC,QAC1ClD,QAAS,OACTG,cAAe,SACfF,WAAY,UAEhBkD,QAAS,CACLH,gBAAkBlD,EAAMa,QAAQsC,WAAmBG,OACnD/C,MAAO,QAEXgD,iBAAkB,CACdrD,QAAS,OACTG,cAAe,MACfD,eAAgB,gBAChBD,WAAY,SACZI,MAAO,QAEXiD,KAAM,CACFC,OAAQ,WAEZxB,MAAO,CACHrB,MAAO,QACPD,WAAY,QAEhByB,QAAS,CACLlC,QAAS,OACTG,cAAe,MACfD,eAAgB,cAEpBmC,WAAY,CACRC,YAAaxC,EAAMmC,QAAQ,IAE/BuB,SAAU,CACNnD,MAAO,OACPoD,QAAS3D,EAAMmC,QAAQ,IAE3ByB,SAAU,CACNrD,MAAO,GACPC,OAAQ,IAEZqD,WAAY,CACR5C,UAAWjB,EAAMmC,QAAQ,IAE7B2B,UAAW,CACPvD,MAAO,OACPL,QAAS,OACTE,eAAgB,SAChBD,WAAY,SACZK,OAAQ,2BAIVuD,EAAeC,YAAH,2RAuHHC,UA1GyB,WACpC,IAAM7C,EAAUtB,IACVhC,EAAUC,cAF0B,EAGUH,cAA5Ca,EAHkC,EAGlCA,YAAaP,EAHqB,EAGrBA,KAAMC,EAHe,EAGfA,QAASE,EAHM,EAGNA,YAHM,EAIAnB,YAAS6G,EAAc,CAC7DG,UAAW,CACPhG,OACAE,MAAOC,KAHP8F,EAJkC,EAIlCA,QAASC,EAJyB,EAIzBA,MAAOC,EAJkB,EAIlBA,KAAMC,EAJY,EAIZA,QAMtBC,EAAc3E,aAAe,SAAC4E,GAAD,OAAWA,EAAMC,QAAQC,WAAtDH,UAEFI,EAAmBjG,uBACrB,SAACkG,EAAOC,GACJ1G,EAAQ0G,EAAU,GAClBpG,EAAYoG,EAAU,EAAGxG,GACzByG,OAAOC,SAAS,EAAG,GAEnBT,EAAQ,CACJpG,KAAM2G,EAAU,EAChBzG,MAAOC,MAGf,CAACI,EAAa6F,EAASjG,EAAaF,IAGlC6G,EAAoBtG,uBACtB,SAACuG,GAAD,OAAQ,WACJnH,EAAQiB,KAAR,oBAA0BkG,EAA1B,aAEJ,CAACnH,IAGCoH,EAAmBxG,uBAAY,WACjCZ,EAAQiB,KAAR,mBACD,CAACjB,IAEEqH,EAAqBzG,uBAAY,WACnCZ,EAAQiB,KAAK,eACd,CAACjB,IAEJ,GAAIsG,EACA,MAAMA,EA1CgC,OA6CG,OAAJC,QAAI,IAAJA,OAAA,EAAAA,EAAMe,cAAe,GA7CpB,IA6ClCC,eA7CkC,MA6CxB,GA7CwB,MA6CpBC,kBA7CoB,MA6CP,EA7CO,EA0D1C,OACI,sBAAK/D,UAAWH,EAAQU,KAAxB,UACI,cAACyD,EAAA,EAAD,CAAShE,UAAWH,EAAQiC,QAA5B,SACI,sBAAK9B,UAAWH,EAAQmC,iBAAxB,UACI,cAACiC,EAAA,EAAD,CAAaC,UAAU,SAAvB,SACI,cAACC,EAAA,EAAD,CACI9E,MAAM,UACNgB,QAASuD,EACT5D,UAAWH,EAAQoC,KAHvB,wBAOJ,qBAAKjC,UAAWH,EAAQgB,QAAxB,SACI,eAACW,EAAA,EAAD,CAAQnB,QAASsD,EAAjB,UACI,cAAClC,EAAA,EAAD,CAAMzB,UAAWH,EAAQmB,WAAzB,wBAEQ,IAHZ,wBASX4B,GAAW,cAACwB,EAAA,EAAD,CAAkBpE,UAAWH,EAAQwC,YAC/CO,GAAWkB,EAAQO,OAAS,GAjClCP,EAAQQ,KAAI,SAACC,GAAD,OACR,qBAAKvE,UAAWH,EAAQsC,SAAxB,SACI,cAACqC,EAAD,CACI9D,MAAO6D,EAAQ7D,MACfC,YAAa4D,EAAQ5D,YACrBQ,OAAQsC,EAAkBc,EAAQb,YA6BxCd,GAAWkB,EAAQO,OAAS,GAAKN,EAAa,GAC5C,cAACU,EAAA,EAAD,CACIzE,UAAWH,EAAQyC,WACnBjD,MAAM,YACNqF,MAAOX,EACPpH,KAAMA,EAAO,EACbgI,SAAUvB,KAGhBR,GAA8B,IAAnBkB,EAAQO,QACjB,qBAAKrE,UAAWH,EAAQ0C,UAAxB,SACI,cAAC5C,EAAA,EAAD,CACIT,QAAO,sDAAiD8D,EAAjD,KACPlD,WAAW,qBACXC,cAAe4D,EACf5E,MAAK,UAAK6F,GAAL,qCACLnF,QAAQ","file":"static/js/9.c9ec049a.chunk.js","sourcesContent":["import { useLocation } from \"react-router-dom\";\n\nconst useQuery = () => {\n    const location = useLocation();\n    const params = new URLSearchParams(location.search);\n    const result = {};\n    for (const [key, value] of params.entries()) {\n        result[key] = value;\n    }\n    return result;\n};\n\nexport default useQuery;\n","import { useState, useCallback, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport useQuery from \"./useQuery\";\n\nconst DEFAULT_ROWS_PER_PAGE = 20;\n\nexport interface PaginationQuery {\n    page: string;\n    limit: string;\n    startDate: string | Date;\n    endDate: string | Date;\n}\n\nexport interface Pagination {\n    generateURL: (page: number, limit: number) => void;\n    query: PaginationQuery;\n    page: number;\n    setPage: (page: number) => void;\n    rowsPerPage: number;\n    setRowsPerPage: (rowsPerPage: number) => void;\n}\n\nconst usePagination = (): Pagination => {\n    const query = useQuery() as PaginationQuery;\n    const history = useHistory();\n    const location = useLocation();\n    const [page, setPage] = useState(parseInt(query.page, 10) || 0);\n    const [rowsPerPage, setRowsPerPage] = useState(\n        parseInt(query.limit, 10) || DEFAULT_ROWS_PER_PAGE,\n    );\n    console.log(location);\n\n    const generateURL = useCallback(\n        (page0: number, limit: number): void => {\n            const params0 = new URLSearchParams(location.search);\n\n            params0.append(\"page\", page0.toString());\n            params0.append(\"limit\", limit.toString());\n\n            history.push(`${location.pathname}?${params0.toString()}`);\n        },\n        [history, location.pathname, location.search],\n    );\n\n    useEffect(() => {\n        if (query.page === undefined || query.limit === undefined) {\n            generateURL(page, rowsPerPage);\n        }\n    }, [generateURL, page, query.page, query.limit, rowsPerPage]);\n\n    if (\"startDate\" in query) {\n        query.startDate = new Date(Number(query.startDate));\n    }\n\n    if (\"endDate\" in query) {\n        query.endDate = new Date(Number(query.endDate));\n    }\n\n    return { generateURL, query, page, setPage, rowsPerPage, setRowsPerPage };\n};\n\nexport default usePagination;\n","import { useState, useCallback } from \"react\";\n\ninterface HoverState {\n    hover: boolean;\n    onMouseEnter: () => void;\n    onMouseLeave: () => void;\n}\n\nconst useHover = (): HoverState => {\n    const [hover, setHover] = useState(false);\n\n    const onMouseEnter = useCallback(() => {\n        setHover(true);\n    }, []);\n\n    const onMouseLeave = useCallback(() => {\n        setHover(false);\n    }, []);\n\n    return { hover, onMouseEnter, onMouseLeave };\n};\n\nexport default useHover;","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\n\nimport type { AppDispatch } from './store';\nimport type { RootState } from \"../types\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n  },\n  image: {\n    width: \"auto\",\n    height: 400,\n  },\n  message: {\n    fontSize: 20,\n    fontWeight: 400,\n    color: theme.palette.text.secondary,\n  },\n  action: {\n    marginTop: 24,\n  },\n}));\n\nexport default function NoRecords(props) {\n  const classes = useStyles();\n  const { message, actionText, actionHandler, action, image } = props;\n\n  return (\n    <div className={classes.container}>\n      <img className={classes.image} src={image} alt=\"\" />\n      <Typography className={classes.message}>{message}</Typography>\n      {action && (\n        <Button\n          className={classes.action}\n          variant=\"contained\"\n          size=\"large\"\n          color=\"secondary\"\n          onClick={actionHandler}\n        >\n          {actionText}\n        </Button>\n      )}\n    </div>\n  );\n}\n","import { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\n\nimport { QueryHookOptions, QueryResult } from '../types/types';\nimport { useBaseQuery } from './utils/useBaseQuery';\nimport { OperationVariables } from '../../core';\n\nexport function useQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: QueryHookOptions<TData, TVariables>\n) {\n  return useBaseQuery<TData, TVariables>(query, options, false) as QueryResult<\n    TData,\n    TVariables\n  >;\n}\n","import { FunctionComponent } from \"react\";\nimport {\n    Card,\n    CardContent,\n    CardActions,\n    Typography,\n    Button,\n    Icon,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 700,\n    },\n    content: {},\n    title: {\n        fontWeight: \"bold\",\n        fontSize: 20,\n    },\n    description: {\n        marginTop: theme.spacing(2),\n        fontWeight: 400,\n    },\n    actions: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-end\",\n        width: \"100%\",\n    },\n    action: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n    },\n    actionIcon: {\n        marginRight: theme.spacing(1),\n        // fontSize: 16\n    },\n}));\n\nexport interface Props {\n    title?: string;\n    description?: string;\n    onEdit: () => void;\n}\n\nconst ViewCourse: FunctionComponent<Props> = (props: Props) => {\n    const classes = useStyles();\n    const { title, description, onEdit } = props;\n    return (\n        <Card className={classes.root}>\n            <CardContent className={classes.content}>\n                <Typography className={classes.title}>\n                    {title || \"Please specify a title\"}\n                </Typography>\n                <Typography className={classes.description}>\n                    {description || \"Please specify a description\"}\n                </Typography>\n            </CardContent>\n            <CardActions className={classes.actions}>\n                <Button className={classes.action} onClick={onEdit}>\n                    <Icon className={classes.actionIcon} fontSize=\"small\">\n                        edit\n                    </Icon>\n                    Edit\n                </Button>\n            </CardActions>\n        </Card>\n    );\n};\n\nexport default ViewCourse;\n","import { FunctionComponent, useState, useCallback, useEffect } from \"react\";\nimport {\n    Icon,\n    Button,\n    Toolbar,\n    CircularProgress,\n    Breadcrumbs,\n    Link,\n} from \"@material-ui/core\";\nimport { Pagination } from \"@material-ui/lab\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport { gql, useQuery } from \"@apollo/client\";\n\nimport { usePagination } from \"../../hooks\";\nimport { useAppSelector } from \"../../redux/hooks\";\nimport { Article } from \"../../types\";\nimport ViewArticle from \"./ViewArticle\";\nimport NoRecords from \"../common/NoRecords\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n        minHeight: \"100vh\",\n        backgroundColor: theme.palette.background.default,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    toolbar: {\n        backgroundColor: (theme.palette.background as any).level2,\n        width: \"100%\",\n    },\n    toolbarContainer: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        width: \"100%\",\n    },\n    link: {\n        cursor: \"pointer\",\n    },\n    title: {\n        color: \"white\",\n        fontWeight: \"bold\",\n    },\n    actions: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n    },\n    actionIcon: {\n        marginRight: theme.spacing(1),\n    },\n    articles: {\n        width: \"100%\",\n        padding: theme.spacing(4),\n    },\n    progress: {\n        width: 40,\n        height: 40,\n    },\n    pagination: {\n        marginTop: theme.spacing(2),\n    },\n    noRecords: {\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"calc(100vh - 128px)\",\n    },\n}));\n\nconst GET_ARTICLES = gql`\n    query GetArticles($page: Int!, $limit: Int!) {\n        getArticles(page: $page, limit: $limit) {\n            totalPages\n            records {\n                id\n                title\n                description\n            }\n        }\n    }\n`;\n\nconst ViewArticles: FunctionComponent = () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const { generateURL, page, setPage, rowsPerPage } = usePagination();\n    const { loading, error, data, refetch } = useQuery(GET_ARTICLES, {\n        variables: {\n            page,\n            limit: rowsPerPage,\n        },\n    });\n    const { firstName } = useAppSelector((state) => state.session.payload);\n\n    const handlePageChange = useCallback(\n        (event, newPage) => {\n            setPage(newPage - 1);\n            generateURL(newPage - 1, rowsPerPage);\n            window.scrollTo(0, 0);\n\n            refetch({\n                page: newPage - 1,\n                limit: rowsPerPage,\n            });\n        },\n        [generateURL, refetch, rowsPerPage, setPage],\n    );\n\n    const handleEditArticle = useCallback(\n        (id) => () => {\n            history.push(`/articles/${id}/edit`);\n        },\n        [history],\n    );\n\n    const handleNewArticle = useCallback(() => {\n        history.push(`/articles/new`);\n    }, [history]);\n\n    const handleOpenArticles = useCallback(() => {\n        history.push(\"/articles\");\n    }, [history]);\n\n    if (error) {\n        throw error;\n    }\n\n    const { records = [], totalPages = 0 } = data?.getArticles || {};\n\n    const renderArticles = () =>\n        records.map((article: Article) => (\n            <div className={classes.articles}>\n                <ViewArticle\n                    title={article.title}\n                    description={article.description}\n                    onEdit={handleEditArticle(article.id)}\n                />\n            </div>\n        ));\n\n    return (\n        <div className={classes.root}>\n            <Toolbar className={classes.toolbar}>\n                <div className={classes.toolbarContainer}>\n                    <Breadcrumbs separator=\"›\">\n                        <Link\n                            color=\"inherit\"\n                            onClick={handleOpenArticles}\n                            className={classes.link}>\n                            Articles\n                        </Link>\n                    </Breadcrumbs>\n                    <div className={classes.actions}>\n                        <Button onClick={handleNewArticle}>\n                            <Icon className={classes.actionIcon}>\n                                add_circle\n                            </Icon>{\" \"}\n                            New Article\n                        </Button>\n                    </div>\n                </div>\n            </Toolbar>\n            {loading && <CircularProgress className={classes.progress} />}\n            {!loading && records.length > 0 && renderArticles()}\n            {!loading && records.length > 0 && totalPages > 1 && (\n                <Pagination\n                    className={classes.pagination}\n                    color=\"secondary\"\n                    count={totalPages}\n                    page={page + 1}\n                    onChange={handlePageChange}\n                />\n            )}\n            {!loading && records.length === 0 && (\n                <div className={classes.noRecords}>\n                    <NoRecords\n                        message={`Are you ready to create your first article, ${firstName}?`}\n                        actionText=\"Create New Article\"\n                        actionHandler={handleNewArticle}\n                        image={`${process.env.PUBLIC_URL}/assets/images/empty-articles.svg`}\n                        action={true}\n                    />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ViewArticles;\n"],"sourceRoot":""}